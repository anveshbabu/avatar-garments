{"version":3,"sources":["routes/routes.js","components/common/typography/button/normalButton.js","components/common/typography/button/buttongroup.js","components/common/typography/input/index.js","components/common/typography/textarea/index.js","components/common/typography/checkbox/index.js","helpers/index.js","components/common/typography/appBack/index.js","components/common/typography/select/index.js","components/common/typography/abIf/index.js","components/common/typography/dropdown/index.js","components/common/typography/table/index.js","service/constants/app/index.js","service/constants/modal/index.js","components/common/typography/modal/index.js","components/common/typography/Pagination/index.js","components/common/typography/tabs/index.js","components/common/typography/radio/index.js","components/common/typography/stepper/index.js","layouts/mainLayout/header/index.js","components/common/typography/app async select/index.js","components/common/typography/badge/index.jsx","components/common/typography/toggle switch/index.js","layouts/mainLayout/index.js","layouts/auth/index.js","service/utilities.js","service/toast.js","api/user/index.js","api/auth/index.js","pages/auth/login/index.js","pages/dashboard/index.js","entityModel/product.js","components/pages/products/productEdit/index.js","api/product/index.js","components/pages/products/productList/index.js","entityModel/supplier.js","api/supplier/index.js","components/pages/supplier/supplierAdd/index.js","components/pages/supplier/supplierList/index.js","entityModel/user.js","components/pages/users/userEdit/index.js","components/pages/users/userList/index.js","pages/products/productList.js","pages/supplier/supplierList.js","pages/users/usersList.js","pages/devLayout/components.js","routes/index.js","firebase.config.js","App.js","reportWebVitals.js","index.js"],"names":["routers","path","auth","exact","redirect","component","childrens","NormalButton","this","props","className","label","onClick","id","disabled","rightIcon","leftIcon","title","loader","role","React","Component","ButtonGroup","labels","map","name","NormalInput","handleBlur","e","body","target","type","value","onBlur","placeholder","onChange","readOnly","min","max","NormalTextarea","rows","console","log","NormalCheckbox","Math","floor","random","checked","inputClass","class","Checked","htmlFor","history","require","createHashHistory","AppBack","handleAppBack","goBack","NormalSelect","handleChange","newValue","isMulti","length","forEach","array","index","obj","push","onMenuClose","customStyles","control","base","height","minHeight","options","defaultValue","isRtl","isClearable","isLoading","isSearchable","async","debounceTimeout","cacheUniq","DropdownIndicator","components","selectProps","menuIsOpen","show","classNamePrefix","isDisabled","styles","find","data","loadOptions","AbIf","children","NormalDropdown","handleDropdown","setState","isOpen","state","handleFilterInput","event","optionsList","result","filter","filterValue","searchValue","dropdownId","assignIds","prevProps","prevState","labelIcon","removeAssignId","caret","direction","isSearch","searchPlaceholder","autoClose","ButtonDropdown","toggle","DropdownToggle","color","DropdownMenu","DropdownItem","header","i","img","includes","src","alt","width","divider","icon","NormalTable","paginationactive","pageNumber","paginationChange","pagination","theadList","paginationConfig","activePage","itemsCountPerPage","pageCount","totalItemsCount","TotalCount","pageRangeDisplayed","btnDisplay","itemClass","linkClass","innerClass","nextPageText","prevPageText","hideFirstLastPages","handlePageChange","bind","USER_TYPE","EXIST_LOCAL_STORAGE","AUTHTOKEN","USER_ID","IS_KEEP_ME","KEEP_ME_OBJ","META_BRANCH","STATUS","METER","PRODUCT_STATUS","CURRENT_USER","process","REACT_APP_PROD_URL","REACT_APP_GRAPHQL_URL","MODAL","SUCCESS","DANGER","INFO","DEFAULT","WARNING","Dialog","open","modal","modalImg","onToggle","sucessBtn","cancleBtn","btn","subText","actionLoder","Modal","ModalBody","ModalFooter","Header","handleLogOut","alertModel","isShow","okBtn","handleAlertModal","href","viewBox","d","to","MainLayout","AuthLayout","isAuthenticated","axios","create","headers","req","res","next","accessToken","localStorage","getItem","jwtDecoded","jwtDecode","Date","exp","removeItem","error","jwtDecodeDetails","userObj","JSON","parse","Toast","message","store","addNotification","insert","container","animationIn","animationOut","dismiss","duration","onScreen","updateUser","Promise","resolve","reject","a","user_id","fName","lName","updatedBy","date","toISOString","userId","updateDoc","doc","getFirestore","docRef","getAllUser","getAuth","currentUser","getDocs","query","collection","where","querySnapshot","createAuthentication","email","createUserWithEmailAndPassword","then","userCredential","user","uid","createdBy","setDoc","createUser","catch","code","userSignin","username","password","signInWithEmailAndPassword","setItem","getDoc","docSnap","exists","stringify","errorCode","Login","loginForm","passwordType","isFormLoder","isKeepMe","keepMeObj","isResErr","handleInputChange","handleSubmit","validator","allValid","hideMessages","showMessages","handleisKeepMeChange","clear","Object","assign","SimpleReactValidator","element","autoForceUpdate","outline","Dashboard","productObj","totalM","wastageM","inhouseDate","amount","totalLengthMeter","supplierId","completedDate","cutting","small","medium","large","stitching","ironing","packing","shipment","status","ProductEdit","split","Array","isArray","Number","handleFormSubmit","hasOwnProperty","addDoc","createProduct","forceUpdate","productEditObj","keys","productStatusList","purgeFields","messages","between","ProductList","getAllProductList","isLoder","getAllProducts","productList","isNodata","handleTogleEditModule","isProductFormModal","handleTabChange","tabActive","handleSearch","toLowerCase","searchName","match","params","scope","colspan","moment","format","supplierObj","getAllSupplier","cont","size","getAllProductsAggregation","countObj","SupplierAdd","createSupplier","supplierObjForm","SupplierList","isOpenAdd","supplierList","getAllSupplierList","empCode","phone","designation","userType","UserEdit","userObjForm","userTypeOpp","statusTypeOpp","UserList","userList","deleteUserIndex","getAllUserList","handleMoreOptions","openUserForm","isAlertModul","colSpan","Product","Supplier","Users","isUserEditModal","handleOpenForm","Components","form","formSubmit","Password","checkbox","textarea","select","tabelConfig","start","end","tbodyList","userImg","request","phoneNumber","location","paginationLength","tableChange","handleTable","alinement","Routes","requireAuth","nextState","replace","onEnter","render","pathname","LayoutComponent","Layout","ChildrenComponent","childrenPath","PageComponent","Pages","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5cbb19f.chunk.js","sourcesContent":["const routers = [\r\n  {\r\n    path: '/',\r\n    auth: false,\r\n    exact: true,\r\n    redirect: '/auth',\r\n  },\r\n  {\r\n    component: 'AuthLayout',\r\n    path: '/auth',\r\n    redirect: \"/auth/login/\",\r\n    auth: false,\r\n    exact: false,\r\n    childrens: [\r\n      {\r\n        component: \"Login\",\r\n        path: \"/login/\",\r\n        auth: false,\r\n        exact: true,\r\n      },\r\n\r\n    ]\r\n  },\r\n\r\n\r\n  {\r\n    component: \"MainLayout\",\r\n    path: \"/dashboard\",\r\n    redirect: \"/dashboard/\",\r\n    auth: false,\r\n    exact: false,\r\n    childrens: [\r\n      {\r\n        component: \"Dashboard\",\r\n        path: \"/\",\r\n        auth: false,\r\n        exact: true\r\n      },\r\n      \r\n    ]\r\n  },\r\n\r\n  {\r\n    component: \"MainLayout\",\r\n    path: \"/supplier\",\r\n    redirect: \"/supplier/\",\r\n    auth: false,\r\n    exact: false,\r\n    childrens: [\r\n      {\r\n        component: \"Supplier\",\r\n        path: \"/\",\r\n        auth: false,\r\n        exact: true\r\n      },\r\n      {\r\n        component: \"Product\",\r\n        path: \"/product/:supplierId\",\r\n        auth: false,\r\n        exact: true\r\n      }\r\n    ]\r\n  },\r\n\r\n\r\n  {\r\n    component: \"MainLayout\",\r\n    path: \"/users\",\r\n    redirect: \"/users/\",\r\n    auth: false,\r\n    exact: false,\r\n    childrens: [\r\n      {\r\n        component: \"Users\",\r\n        path: \"/\",\r\n        auth: false,\r\n        exact: true\r\n      },\r\n      // {\r\n      //   component: \"Product\",\r\n      //   path: \"/product\",\r\n      //   auth: false,\r\n      //   exact: true\r\n      // }\r\n    ]\r\n  },\r\n\r\n  // {\r\n  //   component: \"MainLayout\",\r\n  //   path: \"/product\",\r\n  //   redirect: \"/product/\",\r\n  //   auth: false,\r\n  //   exact: true,\r\n  //   childrens: [\r\n  //     {\r\n  //       component: \"Product\",\r\n  //       path: \"/\",\r\n  //       auth: false,\r\n  //       exact: true\r\n  //     }\r\n  //   ]\r\n  // },\r\n\r\n\r\n\r\n\r\n  \r\n  {\r\n    component: \"MainLayout\",\r\n    path: \"/devLayout\",\r\n    redirect: \"/devLayout/components/\",\r\n    auth: false,\r\n    exact: false,\r\n    childrens: [\r\n      {\r\n        component: \"Components\",\r\n        path: \"/components\",\r\n        auth: false,\r\n        exact: true,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routers","import React from \"react\";\r\n\r\nexport class NormalButton extends React.Component {\r\n  render() {\r\n    const {\r\n      className = \"\",\r\n      label = \"\",\r\n      onClick,\r\n      id,\r\n      disabled = false,\r\n\r\n      rightIcon = \"\",\r\n      leftIcon = \"\",\r\n      title = \"\",\r\n      loader = false,\r\n    } = this.props;\r\n\r\n    return (\r\n      <button\r\n        id={id}\r\n        className={`btn ${className === \"\" ? \"btn-primary\" : className}`}\r\n        onClick={onClick}\r\n        disabled={disabled || loader}\r\n        title={title}\r\n      >\r\n        {leftIcon !== \"\" ? (\r\n          <span className={`btn-right-icon material-icons mr-1`}>\r\n            {leftIcon}\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {label}\r\n        {rightIcon !== \"\" ? (\r\n          <span className={`btn-right-icon material-icons ml-1`}>\r\n            {rightIcon}\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {loader ? (\r\n          <div className=\"spinner-border spinner-border-sm text-light ms-1\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React from \"react\";\r\nimport { NormalButton } from './normalButton'\r\nexport class ButtonGroup extends React.Component {\r\n    render() {\r\n        const {\r\n            className = \"\",\r\n            labels = [],\r\n            onClick\r\n        } = this.props;\r\n\r\n        return (\r\n\r\n            <div className=\"filter-btn\" >\r\n                {labels.map((name) =>\r\n                    <NormalButton label={name} className={className ? className : '\"btn-outline-primary btn-sm\"'} onClick={() => {\r\n                        onClick(name);\r\n                    }} />\r\n\r\n                )}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React, { Component } from \"react\";\r\n\r\nexport class NormalInput extends Component {\r\n\r\n\r\n\r\n\r\n\r\n  handleBlur = (e) => {\r\n    let body = {};\r\n    body = {\r\n      target: {\r\n        name: e.target.name,\r\n        type: this.props.type,\r\n        value: e.target.value\r\n      }\r\n    }\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur(body);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      className = \"\",\r\n      placeholder = \"\",\r\n      onChange = null,\r\n      value = \"\",\r\n      name,\r\n      disabled = false,\r\n      type = \"text\",\r\n      readOnly = false,\r\n      min = \"\",\r\n      max = \"\",\r\n      id=\"\"\r\n\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n\r\n        <input\r\n          className={`form-control  ${className}`}\r\n          name={name}\r\n          type={type}\r\n          readOnly={readOnly}\r\n          disabled={disabled}\r\n          value={value}\r\n          min={min}\r\n          max={max}\r\n          id={id}\r\n          placeholder={placeholder}\r\n          onBlur={this.handleBlur}\r\n          onChange={e => {\r\n            let body = {};\r\n\r\n            body = {\r\n              target: {\r\n                name: e.target.name,\r\n                type: type,\r\n                value: e.target.value\r\n              }\r\n            };\r\n            if (onChange)\r\n              onChange(body);\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React, { Component } from 'react'\r\n\r\nexport class NormalTextarea extends Component {\r\n    render() {\r\n        let {\r\n            className = \"form-control\",\r\n            placeholder = \"\",\r\n            onChange,\r\n            value = \"\",\r\n            rows=\"\",\r\n            name,\r\n            disabled = false,\r\n        } = this.props;\r\n        console.log(this.props)\r\n        return (\r\n            <>\r\n                <textarea\r\n                    className={className}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    placeholder={placeholder}\r\n                    rows={rows}\r\n                    onChange={e => {\r\n\r\n                        let body = {}\r\n\r\n                        body = {\r\n                            target: {\r\n                                name: e.target.name,\r\n                                value: e.target.value\r\n                            }\r\n                        }\r\n\r\n                        onChange(body)\r\n\r\n                    }}\r\n                ></textarea>\r\n            </>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from \"react\";\r\n\r\nexport class NormalCheckbox extends Component {\r\n  render() {\r\n    let {\r\n      className = \"custom-control custom-checkbox \",\r\n      label = \" \",\r\n      value = \"\",\r\n      name = \"\",\r\n      id = Math.floor(Math.random() * 1000000),\r\n      onChange,\r\n      checked = false,\r\n      inputClass = \"custom-control-input\",\r\n      disabled = false,\r\n\r\n    } = this.props;\r\n    return (\r\n    \r\n        <div class={`custom-control custom-checkbox ${className}`}>\r\n        <input\r\n          disabled={disabled}\r\n          type=\"checkbox\"\r\n          name={name}\r\n          value={value}\r\n          checked={checked}\r\n          id={id}\r\n          className={inputClass}\r\n          onChange={({ target: { name, checked: Checked, type: checked } }  ) => {\r\n            // console.log('sdsxzxz')\r\n            onChange &&\r\n              onChange({ target: { name, checked: Checked, type: checked } });\r\n          }}\r\n        />\r\n        {/* <span className=\"checkbox-tick border-radius-circle\"></span> */}\r\n        {label ? (\r\n          <label\r\n            htmlFor={id}\r\n            className=\"custom-control-label label-txt fs-16 ps-1\"\r\n          >\r\n            {label}\r\n          </label>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const history = require('history').createHashHistory({});","import React from \"react\";\r\nimport \"./appBack.scss\";\r\nimport { history } from \"../../../../helpers\";\r\nexport class AppBack extends React.Component {\r\n  handleAppBack = () => {\r\n    history.goBack();\r\n  };\r\n  render() {\r\n    let { label = \"\" } = this.props;\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn app-back p-0 mb-2\"\r\n        onClick={this.handleAppBack}\r\n      >\r\n       <i class=\"bi bi-arrow-left-short\"></i> {label}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport Select, { components } from \"react-select\";\r\nimport './select.scss'\r\nimport { AbIf } from \"../..\";\r\n// import Creatable from \"react-select/creatable\";\r\nimport { AsyncPaginate } from 'react-select-async-paginate';\r\n\r\nexport class NormalSelect extends Component {\r\n  // handleInputChange = (inputValue, actionMeta) => {\r\n  //   console.group(\"Input Changed\");\r\n  //   console.log(inputValue.label);\r\n  //   console.log(`action: ${actionMeta.action}`);\r\n  //   console.groupEnd();\r\n  // };\r\n\r\n  //change select\r\n  handleChange = newValue => {\r\n    let { isMulti } = this.props;\r\n    console.log('newValue-----', newValue)\r\n    if (!!isMulti) {\r\n      let body = {\r\n        target: {\r\n          name: this.props.name,\r\n          value: []\r\n        }\r\n      }\r\n      if (!!newValue && newValue.length) {\r\n        newValue.forEach((array, index) => {\r\n          let obj = {\r\n            value: array.value,\r\n            label: array.label\r\n          }\r\n          body.target.value.push(obj)\r\n          // body.target.value.push(array.value)\r\n          // body.target.label.push(array.label)\r\n        });\r\n      }\r\n      if (this.props.onChange)\r\n        this.props.onChange(body);\r\n    } else {\r\n      let body = {\r\n        target: {\r\n          name: this.props.name,\r\n          value: newValue ? newValue.value : '',\r\n          label: newValue ? newValue.label : '',\r\n        }\r\n      }\r\n      if (this.props.onChange)\r\n        this.props.onChange(body);\r\n    }\r\n\r\n  };\r\n  render() {\r\n    const customStyles = {\r\n      control: base => ({\r\n        ...base,\r\n        height: 10,\r\n        minHeight: 10,\r\n      })\r\n    };\r\n    let {\r\n      className = \"\",\r\n      options = [\r\n        { label: \"hello\", value: 0 },\r\n        { label: \"test\", value: 1 }\r\n      ],\r\n      // onChange,\r\n      name = \"\",\r\n      // placeholder = \"Select\",\r\n      // isPlaceholderNeed = true,\r\n      disabled = false,\r\n      defaultValue = options[0],\r\n      placeholder = '',\r\n      isRtl = false,\r\n      isClearable = false,\r\n      isLoading = false,\r\n      isSearchable = false,\r\n      isMulti = false,\r\n      async = false,\r\n      value = '',\r\n      debounceTimeout = 3000,\r\n\r\n      cacheUniq = ''\r\n    } = this.props;\r\n    const DropdownIndicator = props => {\r\n      return (\r\n        components.DropdownIndicator && (\r\n          <components.DropdownIndicator {...props}>\r\n            {/* <FontAwesomeIcon icon={props.selectProps.menuIsOpen ? \"caret-up\" : \"caret-down\"}/> */}\r\n            <span className=\"material-icons black-50\">{props.selectProps.menuIsOpen ? \"arrow_drop_up\" : \"arrow_drop_down\"}</span>\r\n          </components.DropdownIndicator>\r\n        )\r\n      );\r\n    };\r\n\r\n    // const MenuList = wrapMenuList(this.props.MenuList)\r\n    return (\r\n\r\n      <>\r\n\r\n        <AbIf show={!async}>\r\n          <Select\r\n            // components={isMulti ? { Option } : ''}\r\n            className={className}\r\n            classNamePrefix=\"Select\"\r\n            // defaultValue={placeholder == '' ? defaultValue : ''}\r\n            isDisabled={disabled}\r\n            isLoading={isLoading}\r\n            isClearable={isClearable}\r\n            isRtl={isRtl}\r\n            isSearchable={isSearchable}\r\n            name={name}\r\n            options={options}\r\n            onChange={this.handleChange}\r\n            isMulti={isMulti}\r\n            placeholder={placeholder}\r\n            styles={customStyles}\r\n            value={!!options && options.length > 0 ? options.find(data => data.value === value) ? options.find(data => data.value === value) : null : null}\r\n            components={{ DropdownIndicator }}\r\n          // components={{ DropdownIndicator,MenuList }}\r\n          // ref={r => {\r\n          //   selectRef = r;\r\n          // }}\r\n          />\r\n        </AbIf>\r\n\r\n        <AbIf show={async}>\r\n          <AsyncPaginate\r\n            debounceTimeout={debounceTimeout}\r\n            className={className}\r\n            isDisabled={disabled}\r\n            isClearable={isClearable}\r\n            isSearchable={isSearchable}\r\n            classNamePrefix=\"Select\"\r\n            defaultValue={placeholder === '' ? defaultValue : ''}\r\n            placeholder={placeholder}\r\n            cacheUniq={cacheUniq}\r\n            onMenuClose={this.onMenuClose}\r\n            isMulti={isMulti}\r\n            value={value}\r\n            loadOptions={options}\r\n            components={{ DropdownIndicator }}\r\n            onChange={this.handleChange}\r\n\r\n          />\r\n        </AbIf>\r\n\r\n      </>\r\n    );\r\n  }\r\n  onMenuClose = () => {\r\n    console.log('gff')\r\n  }\r\n}\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React from 'react';\r\n\r\nexport class AbIf extends React.Component {\r\n    render() {\r\n        if (this.props.show) {\r\n            return (\r\n                this.props.children\r\n            );\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React from \"react\";\r\nimport \"./dropdown.scss\";\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { AbIf } from \"../abIf\";\r\nimport { NormalInput } from \"../input\";\r\nexport class NormalDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dropdownId: Math.floor(100000 + Math.random() * 900000),\r\n      isOpen: false,\r\n      optionsList: [],\r\n      searchValue: '',\r\n      assignIds: []\r\n    }\r\n\r\n  }\r\n  handleDropdown = () => {\r\n    this.setState({ isOpen: !this.state.isOpen })\r\n  };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    let { optionsList } = this.props;\r\n    this.setState({ optionsList })\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    let { optionsList, assignIds } = this.props;\r\n    let { isOpen } = this.state;\r\n    if (optionsList !== prevProps.optionsList) {\r\n      this.setState({ optionsList })\r\n    }\r\n\r\n    if (isOpen !== prevState.isOpen && !isOpen) {\r\n      this.setState({ optionsList, searchValue: '' })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  handleFilterInput = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    let { optionsList } = this.props;\r\n    const result = optionsList.filter(({ label }) => label == value);\r\n    let filterValue = !!value ? result : optionsList;\r\n    this.setState({ optionsList: filterValue, searchValue: value })\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      className = \"\",\r\n      label = \"\",\r\n      labelIcon = \"\",\r\n      onClick,\r\n      removeAssignId,\r\n      disabled = false,\r\n      caret = true,\r\n      direction = '',\r\n      // id = ''\r\n      isSearch = false,\r\n      searchPlaceholder = '',\r\n      assignIds = [],\r\n      autoClose = false\r\n    } = this.props;\r\n    let { isOpen, optionsList, searchValue, } = this.state;\r\n    return (\r\n\r\n\r\n      <ButtonDropdown direction={direction} disabled={disabled} isOpen={isOpen} toggle={this.handleDropdown} className={isSearch ? 'normal-drop' : ''}>\r\n        {/* <Button id=\"caret\" >{label ? label : ''}  {isOpen ? <i className=\"fas fa-chevron-up ml-2\"></i> : <i className=\"fas fa-chevron-down ml-2\"></i>}</Button> */}\r\n        <DropdownToggle disabled={disabled} color=\"\" className={className} >\r\n\r\n\r\n          {label ? label : <i className={labelIcon}></i>} <AbIf show={caret}>{isOpen ? <i className=\"fas fa-chevron-up ml-2\"></i> : <i className=\"fas fa-chevron-down ml-2\"></i>} </AbIf>\r\n        </DropdownToggle>\r\n\r\n        <DropdownMenu >\r\n          {isSearch ? <DropdownItem header><NormalInput className=\"search-input\" type=\"search\" value={searchValue} placeholder={searchPlaceholder} onChange={this.handleFilterInput} /></DropdownItem> : ''}\r\n          <div>\r\n            {assignIds.length > 0 ? <DropdownItem header> <label className=\"text-dark\">Assigned</label></DropdownItem> : ''}\r\n            {optionsList.map(({ label, img, value }, i) =>\r\n              <AbIf show={assignIds.includes(value)}>\r\n                <DropdownItem header > {img ? <img src={img} alt=\"Girl in a jacket\" className=\"mr-1 rounded-circle\" width=\"24\" height=\"25\" /> : ''}\r\n                  {label}\r\n                  <i onClick={() => removeAssignId(value)} className=\"bi bi-x-lg float-right opacity-0 mt-1 cursor-pointer\"></i>\r\n                </DropdownItem>\r\n              </AbIf>\r\n            )}\r\n          </div>\r\n\r\n          {isSearch ? <DropdownItem divider /> : ''}\r\n          {optionsList.map(({ label, icon, img, value }, i) =>\r\n\r\n            <AbIf show={!assignIds.includes(value)}>\r\n              <DropdownItem header={autoClose} onClick={e => {\r\n                let body = {};\r\n                body = {\r\n                  target: {\r\n                    value: label,\r\n                    data: optionsList[i]\r\n                  }\r\n                }\r\n                // this.handleDropdown(id)\r\n                if (onClick)\r\n                  onClick(body);\r\n              }}>\r\n                {img ? <img src={img} alt=\"Girl in a jacket\" className=\"mr-1 rounded-circle\" width=\"24\" height=\"25\" /> : ''}\r\n                {icon ? <i className={`${icon} me-1`}></i> : \"\"}{\" \"} {label}</DropdownItem>\r\n            </AbIf>\r\n\r\n          )}\r\n          {optionsList.length === 0 ? <DropdownItem className=\"text-center\" disabled>No options</DropdownItem> : ''}\r\n\r\n\r\n        </DropdownMenu>\r\n      </ButtonDropdown  >\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React from \"react\";\r\nimport { AbIf } from \"../../../common\";\r\nimport Pagination from \"react-js-pagination\";\r\nexport class NormalTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      paginationactive: 1\r\n    };\r\n  }\r\n   // handlePagenation = data => {\r\n  //   let tbodyList = {\r\n  //     tbodyList: data\r\n  //   };\r\n  //   this.props.tableChange(data);\r\n  // };\r\n  componentDidMount() {\r\n    // this.splitArray();\r\n    // if (this.props.pagination) {\r\n    //   this.setState({\r\n    //     paginationData: this.handleSplitArray(\r\n    //       this.props.tbodyList,\r\n    //       this.props.paginationLength\r\n    //     )\r\n    //   });\r\n    //   this.handlePagenation(\r\n    //     this.handleSplitArray(\r\n    //       this.props.tbodyList,\r\n    //       this.props.paginationLength\r\n    //     )[0]\r\n    //   );\r\n    // }\r\n  }\r\n  handlePageChange(pageNumber) {\r\n    console.log(`active page is ${pageNumber}`);\r\n    this.setState({ paginationactive: pageNumber });\r\n    this.props.paginationChange(pageNumber)\r\n  }\r\n  render() {\r\n    let {\r\n      pagination = false,\r\n      className = \"\",\r\n      theadList = \"\",\r\n      children,\r\n      paginationConfig\r\n    } = this.props;\r\n    let { paginationactive } = this.state;\r\n    return (\r\n      <>\r\n        <table className={`table ${className}`}>\r\n          <thead>\r\n            <tr>\r\n              {theadList.map((title, index) => (\r\n                <th key={index}>{title}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>{children}</tbody>\r\n        </table>\r\n        <AbIf show={pagination}>\r\n          {\" \"}\r\n          {/* <Pagination\r\n            length={paginationLength}\r\n            change={e => this.handlePagenation(e)}\r\n            data={paginationData}\r\n          /> */}\r\n          <Pagination\r\n            activePage={paginationactive}\r\n            itemsCountPerPage={!!paginationConfig?paginationConfig.pageCount:0}\r\n            totalItemsCount={!!paginationConfig?paginationConfig.TotalCount:0}\r\n            pageRangeDisplayed={!!paginationConfig?paginationConfig.btnDisplay:0}\r\n            itemClass=\"page-item\"\r\n            linkClass=\"page-link\"\r\n            innerClass=\" custom-pagination pagination\"\r\n            nextPageText=\"Next\"\r\n            // nextPageText=\"Next\"\r\n            prevPageText=\"Previous\"\r\n            hideFirstLastPages={true}\r\n            onChange={this.handlePageChange.bind(this)}\r\n          />\r\n        </AbIf>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export const LOGIN_TYPE ={\r\n    ADMIN:'admin'\r\n}\r\nexport const USER_TYPE ={\r\n    ADMIN:'Admin',\r\n    USER:'User'\r\n}\r\n\r\nexport const EXIST_LOCAL_STORAGE ={\r\n    AUTHTOKEN:'AuthToken',\r\n    USER_ID:'userId',\r\n    IS_KEEP_ME:'isKeepMe',\r\n    KEEP_ME_OBJ:'keepMeObj',\r\n    META_BRANCH:'metaBranch'\r\n}\r\n\r\nexport const STATUS={\r\n    ACTIVE: 'active',\r\n    IN_ACTIVE: 'inactive',\r\n    DELETED: 'deleted'\r\n}\r\nexport const METER={\r\n    SMALL: 2,\r\n    MEDIUM: 4,\r\n    LARGE: 6\r\n}\r\n\r\nexport const PRODUCT_STATUS ={\r\n    IN_PROGRESS:'In Progress',\r\n    COMPLETED:'Completed'\r\n}\r\n\r\nexport const CONFIG ={\r\n    API_URL: process.env.NODE_ENV === 'development' ?process.env.REACT_APP_DEV_URL:process.env.REACT_APP_PROD_URL,\r\n    GRAPHQL_URL:process.env.REACT_APP_GRAPHQL_URL,\r\n};\r\n\r\nexport const CURRENT_USER='currentUserObj'\r\n\r\n\r\n\r\n\r\n","export const MODAL = {\r\n    TYPE: {\r\n        SUCCESS: 'success',\r\n        DANGER: 'danger',\r\n        INFO: 'info',\r\n        DEFAULT: 'default',\r\n        WARNING: 'warning',\r\n    },\r\n\r\n}\r\n\r\n// success\r\n// danger\r\n// info\r\n// default\r\n// warning","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { Modal, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { NormalButton, AbIf } from '../../index';\r\nimport './modal.scss';\r\nimport { MODAL } from \"../../../../service/constants\";\r\n\r\nexport class Dialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: this.props.modal,\r\n            modalImg: ''\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        let { type } = this.props;\r\n        if (type === MODAL.TYPE.SUCCESS) {\r\n            this.setState({ modalImg: '/avatar-garments/images/alert/success.svg' })\r\n        } else if (type === MODAL.TYPE.WARNING) {\r\n            this.setState({ modalImg: '/avatar-garments/images/alert/warning.svg' })\r\n        } else if (type === MODAL.TYPE.DANGER) {\r\n            this.setState({ modalImg: '/avatar-garments/images/alert/danger.svg' })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { type } = this.props;\r\n        if (prevProps.type !== type) {\r\n            if (type === MODAL.TYPE.SUCCESS) {\r\n                this.setState({ modalImg: '/avatar-garments/images/alert/success.svg' })\r\n            } else if (type === MODAL.TYPE.WARNING) {\r\n                this.setState({ modalImg: '/avatar-garments/images/alert/warning.svg' })\r\n            } else if (type === MODAL.TYPE.DANGER) {\r\n                this.setState({ modalImg: '/avatar-garments/images/alert/danger.svg' })\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let { show, onToggle, type, title, sucessBtn = 'deactivate', cancleBtn = \"cancel\", btn = false, subText = '',actionLoder=false } = this.props\r\n        let { modalImg = \"/avatar-garments/images/alert/warning.svg\" } = this.state;\r\n        return (\r\n            <Modal isOpen={show} className={'modal-dialog-centered app-alert-modal'}>\r\n                {/* <ModalHeader toggle={onToggle}>Modal title</ModalHeader> */}\r\n                <ModalBody>\r\n                    <div className=\"row justify-content-md-center\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <img className=\"float-right cursor-pointer\" onClick={() => onToggle(false)} src=\"/images/icons/close-modal.svg\" alt=\"\" />\r\n                            <img className=\"modal-img\" src={modalImg} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"col-md-10  text-center\">\r\n                            <h4>{title}</h4>\r\n                            <p>{subText}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </ModalBody>\r\n                <AbIf show={type === MODAL.TYPE.WARNING || btn}>\r\n                    <ModalFooter className=\"text-center\">\r\n                        <NormalButton label={cancleBtn} disabled={actionLoder}  className=\"btn-secondary alert-btn\" onClick={() => onToggle(false)} />\r\n                        <NormalButton label={sucessBtn} loader={actionLoder} className=\"btn-primary alert-btn\" onClick={() => onToggle(true)} />\r\n                    </ModalFooter>\r\n                </AbIf>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport './pagination.scss'\r\nexport class Pagination extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage:0\r\n    }\r\n  }\r\n  handlePagination = (data,page) => {\r\n    console.log(JSON.stringify(page))\r\n    this.setState({currentPage:page})\r\n    this.props.change(data);\r\n\r\n  };\r\n  render() {\r\n    let { length, data } = this.props;\r\n    let {currentPage}=this.state;\r\n    console.log(\"pagination------->\" + length);\r\n    return (\r\n      <nav className=\" custom-pagination\">\r\n        <ul className=\"pagination\">\r\n          <li className=\"page-item\">\r\n            <a\r\n              className={`page-link ${currentPage ===0?'disabled':''}`}\r\n              href=\"#Previous\"\r\n              onClick={() => this.handlePagination(data[currentPage-1],currentPage-1)}\r\n            >\r\n              Previous\r\n            </a>\r\n          </li>\r\n          {data.map((data, i) => (\r\n            <li className=\"page-item\" key={i}>\r\n              <a\r\n                className={`page-link ${i === currentPage?'active':''}`}\r\n                href={`#${i + 1}`}\r\n                onClick={() => this.handlePagination(data,i)}\r\n              >\r\n                \r\n                {i + 1}\r\n              </a>\r\n            </li>\r\n          ))}\r\n          <li className=\"page-item\">\r\n            <a   className={`page-link ${data.length-1 ===currentPage?'disabled':''}`} href={`#${currentPage}`}  onClick={() => this.handlePagination(data[currentPage+1],currentPage+1)}>\r\n              Next\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React from \"react\";\r\nimport './tabs.scss'\r\n\r\nexport class NormalTabs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: 1,\r\n\r\n        }\r\n    }\r\n    handleChange = (index) => {\r\n        this.setState({ active: index })\r\n        if (!!this.props.onChange) {\r\n\r\n            this.props.onChange(index)\r\n        }\r\n    }\r\n    //WARNING! To be deprecated in React v17. Use new lifecycle static getDerivedStateFromProps instead.\r\n    //WARNING! To be deprecated in React v17. Use componentDidMount instead.\r\n    componentWillMount() {\r\n        let { active } = this.props;\r\n        if (active) {\r\n            this.setState({\r\n                active: active\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        console.log('prevProps-------', this.props)\r\n        let { active } = this.props;\r\n        if (prevProps.active !== active) {\r\n\r\n            if (active) {\r\n                this.setState({\r\n                    active: active\r\n                })\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let { tabList } = this.props;\r\n        let { active } = this.state;\r\n        return (\r\n\r\n            <ul className=\"nav nav-tabs align-items-center ab-tabs\">\r\n                {tabList.map((data, index) => {\r\n                    return (\r\n                        <li className={`${active === index + 1 ? 'active' : ''}  nav-item`} onClick={() => this.handleChange(index + 1)}>\r\n                            <a className={`${active === index + 1 ? 'active' : ''}  nav-link `} href=\"javascript:void(0)\" >{data}</a>\r\n                        </li>\r\n                    )\r\n                })}\r\n\r\n            </ul>\r\n        );\r\n    }\r\n}","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport  \"./radio.scss\";\r\n\r\nexport class NormalRadio extends Component {\r\n  render() {\r\n    let {\r\n      className = \"\",\r\n      label = \"\",\r\n      name = \"\",\r\n      onChange,\r\n      checked = false,\r\n      disabled = false,\r\n      value=''\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={`custom-control custom-radio custom-control-inline ${className}`}>\r\n        <input type=\"radio\"\r\n          onChange={({ target: { name, checked: Checked, type: radio,value } }) => {\r\n\r\n            onChange &&\r\n              onChange({ target: { name, checked: Checked, type: radio,value } });\r\n          }}\r\n          checked={checked}\r\n          name={name}\r\n          disabled={disabled}\r\n          value={value}\r\n          id={label.trim()+name} class=\"custom-control-input\" />\r\n        <label className=\"custom-control-label\" htmlFor={label.trim()+name}>{label}</label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React from \"react\";\r\nimport \"./stepper.scss\";\r\nexport class Stepper extends React.Component {\r\n  render() {\r\n    let { steps, activeStep } = this.props;\r\n    return (\r\n      <div className=\"row stepper-custom mb-3\">\r\n        <div className=\"col-12\">\r\n          <ul className=\"create-progress-bar\">\r\n            {steps.map(({ title }, index) => {\r\n              return (\r\n                <li key={index} className={`${activeStep === index + 1 ? 'active' : ''} ${index + 1 < activeStep ? 'complited' : ''}`}>\r\n                  <span className=\"step-inner-wrapper\">\r\n                    <span className=\"step-icon\">✔</span>\r\n                    <span className=\"step-title\">{title}</span>\r\n                    <label className=\"sub-text\">STEP&nbsp;{index+1}</label>\r\n                  </span>\r\n                 \r\n                </li>\r\n              )\r\n            })}\r\n\r\n          </ul>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './header.scss'\r\nimport { Dialog, NormalDropdown } from \"../../../components/common\";\r\nimport { MODAL } from \"../../../service/constants\";\r\nimport { history } from \"../../../helpers\";\r\nexport class Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            alertModel: {\r\n                isShow: false,\r\n                type: '',\r\n                title: '',\r\n                id: '',\r\n                index: -1,\r\n                okBtn: ''\r\n            }\r\n        };\r\n    }\r\n\r\n    //handleLogOut function call start\r\n    handleLogOut = () => {\r\n        let { alertModel } = this.state;\r\n        alertModel.isShow = true;\r\n        alertModel.type = MODAL.TYPE.WARNING;\r\n        alertModel.okBtn = 'yes, Log Out'\r\n        alertModel.title = 'Are you sure you want to Log Out';\r\n        this.setState({ alertModel })\r\n    }\r\n\r\n    //handleAlert \r\n    handleAlertModal = (value) => {\r\n        let { alertModel } = this.state;\r\n        if (value) {\r\n            alertModel.isShow = false;\r\n           \r\n            history.push(`/auth/login`);\r\n        } else {\r\n            alertModel.isShow = false;\r\n        }\r\n        this.setState({ alertModel })\r\n    }\r\n    render() {\r\n        let { alertModel } = this.state;\r\n        return (\r\n            <header className=\"p-3 mb-3 border-bottom app-header shadow \">\r\n                <div className=\"container\">\r\n                    <div className=\"d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start\">\r\n                        <a href=\"/\" className=\"d-flex align-items-center my-2 my-lg-0 me-lg-auto text-dark text-decoration-none\">\r\n                            <svg id=\"bootstrap\" viewBox=\"0 0 118 94\" className=\"bi me-2\" width=\"40\" height=\"32\">\r\n                                <title>Bootstrap</title>\r\n                                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.509 0c-6.733 0-11.715 5.893-11.492 12.284.214 6.14-.064 14.092-2.066 20.577C8.943 39.365 5.547 43.485 0 44.014v5.972c5.547.529 8.943 4.649 10.951 11.153 2.002 6.485 2.28 14.437 2.066 20.577C12.794 88.106 17.776 94 24.51 94H93.5c6.733 0 11.714-5.893 11.491-12.284-.214-6.14.064-14.092 2.066-20.577 2.009-6.504 5.396-10.624 10.943-11.153v-5.972c-5.547-.529-8.934-4.649-10.943-11.153-2.002-6.484-2.28-14.437-2.066-20.577C105.214 5.894 100.233 0 93.5 0H24.508zM80 57.863C80 66.663 73.436 72 62.543 72H44a2 2 0 01-2-2V24a2 2 0 012-2h18.437c9.083 0 15.044 4.92 15.044 12.474 0 5.302-4.01 10.049-9.119 10.88v.277C75.317 46.394 80 51.21 80 57.863zM60.521 28.34H49.948v14.934h8.905c6.884 0 10.68-2.772 10.68-7.727 0-4.643-3.264-7.207-9.012-7.207zM49.948 49.2v16.458H60.91c7.167 0 10.964-2.876 10.964-8.281 0-5.406-3.903-8.178-11.425-8.178H49.948z\"></path>\r\n                            </svg>\r\n                            <span class=\"fs-4\">Double header</span>\r\n                        </a>\r\n\r\n                        <ul className=\"nav nav-pills col-12 col-lg-auto my-2 me-lg-3 justify-content-center my-md-0 text-smal\">\r\n                            <li className=\"nav-item\"><NavLink to=\"/dashboard\" className=\"nav-link px-2\">Dashboard</NavLink ></li>\r\n                            <li className=\"nav-item\"><NavLink to=\"/supplier\" className=\"nav-link px-2\">Products</NavLink ></li>\r\n                            <li className=\"nav-item\"><NavLink to=\"/users\" className=\"nav-link px-2\">Users</NavLink ></li>\r\n                        </ul>\r\n\r\n\r\n\r\n                        <div className=\"dropdown text-end\" onClick={this.handleLogOut}>\r\n                            <a  className=\"d-block link-light text-decoration-none dropdown-toggle\">\r\n                                <img src=\"https://github.com/mdo.png\" alt=\"mdo\" width=\"32\" height=\"32\" className=\"rounded-circle\" />\r\n                            </a>\r\n                            <ul className=\"dropdown-menu text-small\" aria-labelledby=\"dropdownUser1\">\r\n                                <li><a className=\"dropdown-item\" href=\"#\">New project...</a></li>\r\n                                <li><a className=\"dropdown-item\" href=\"#\">Settings</a></li>\r\n                                <li><a className=\"dropdown-item\" href=\"#\">Profile</a></li>\r\n                                <li><hr className=\"dropdown-divider\" /></li>\r\n                                <li><a className=\"dropdown-item\" href=\"#\">Sign out</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog show={alertModel.isShow} sucessBtn={alertModel.okBtn} onToggle={this.handleAlertModal} type={alertModel.type} title={alertModel.title} />\r\n\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { NormalSelect } from '../../../common'\r\n// import { arrayMax } from \"highcharts\";\r\n\r\n\r\nexport class AppAsyncSelect extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isApiCall: true,\r\n            query: {\r\n                page: 1,\r\n                limit: 10,\r\n                search: \"\",\r\n                sortBy: \"\",\r\n                surveyCategoryId: \"\",\r\n                stateId: null,\r\n                countryId: null\r\n            },\r\n            reqTempList: [],\r\n            selectList: [],\r\n            selectedGroupIds: []\r\n\r\n        }\r\n    }\r\n\r\n    getSelectList = async (...args) => {\r\n        console.log(this.state.isApiCall)\r\n        return new Promise((resolve, reject) => {\r\n            let { isApiCall, query, reqTempList, selectList } = this.state;\r\n            let { type } = this.props;\r\n            let apiCall = isApiCall;\r\n            if (!!args[0]) {\r\n                query.search !== args[0] ? apiCall = true : apiCall = false\r\n                query.search = args[0];\r\n                query.page = 1;\r\n                selectList = []\r\n            } else {\r\n                query.search = '';\r\n            }\r\n            if (apiCall) {\r\n\r\n                let apiType = this.typeAPi(type, query);\r\n\r\n                apiType.then((data) => {\r\n                    console.log(data)\r\n                    let list = data.data;\r\n                    console.log(list, \"asdasd\")\r\n                    reqTempList = [];\r\n                    console.log('isApiCall', apiCall)\r\n                    let listData = list.rows ? list.rows : list.options;\r\n                    console.log(listData.length, \"length\", selectList, reqTempList)\r\n                    listData.length && listData.forEach((array, index) => {\r\n                        console.log(array, \"AAAAAAAAAAAAAAAQQQQQQQQ\", type)\r\n                        let options = this.addOptions(type, array)\r\n                        console.log('array---------', options)\r\n                        selectList.push(options);\r\n                        reqTempList.push(options);\r\n                    });\r\n                    query.page++;\r\n                    (list.count ? (list.count !== selectList.length ? apiCall = true : apiCall = false) : apiCall = false)\r\n                    this.setState({ selectList, reqTempList, isApiCall: apiCall, query })\r\n                    let opp = {\r\n                        options: reqTempList,\r\n                        hasMore: isApiCall,\r\n                    };\r\n                    console.log(opp, \"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\")\r\n                    resolve(opp)\r\n                }).catch((error) => {\r\n                    let opp = {\r\n                        options: [],\r\n                        hasMore: false,\r\n                    };\r\n                    reject(opp)\r\n\r\n                });\r\n                // selectList = this.getUniqueListBy(selectList, 'value')\r\n                console.log('isApiCall ----', apiCall)\r\n                // return {\r\n                //     options: reqTempList,\r\n                //     hasMore: isApiCall,\r\n                // };\r\n            } else {\r\n                console.log('no APi call')\r\n                let opp = {\r\n                    options: [],\r\n                    hasMore: isApiCall,\r\n                };\r\n                resolve(opp)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    getUniqueListBy = (arr, key) => {\r\n        return [...new Map(arr.map(item => [item[key], item])).values()]\r\n    }\r\n\r\n    typeAPi = (type, query) => {\r\n        let { categoryId, questionId, serviceId, countryId, stateId } = this.props;\r\n        query.countryId = type === 'states' ? countryId : '';\r\n        query.stateId = type === 'cities' ? stateId : '';\r\n        console.log(query.stateId, '-------- query.stateId')\r\n        let api;\r\n        switch (type) {\r\n            case 'group':\r\n                api = []\r\n                break;\r\n            \r\n            default:\r\n                api = \"\"\r\n\r\n        }\r\n        return api;\r\n    }\r\n\r\n    addOptions = (type, array) => {\r\n\r\n        console.log(array, type)\r\n\r\n        console.log(array)\r\n\r\n        let options;\r\n        switch (type) {\r\n            case 'group':\r\n                options = { label: array.name, value: array.groupId };\r\n                break;\r\n            case 'category':\r\n                options = { label: array.name, value: array.surveyCategoryId };\r\n                break;\r\n            case 'question':\r\n                options = { label: array.title, value: array.questionId };\r\n                break;\r\n            case 'QuestionOption':\r\n                options = { label: array.option, value: array.id };\r\n                break;\r\n            case 'states':\r\n                options = { label: array.name, value: array.stateId };\r\n                break;\r\n            case 'country':\r\n                options = { label: array.name, value: array.countryId };\r\n                break;\r\n            case 'cities':\r\n                options = { label: array.name, value: array.cityId };\r\n                break;\r\n            case 'roles':\r\n                options = { label: array.name, value: array.roleId };\r\n                break;\r\n            default:\r\n                options = \"\"\r\n\r\n        }\r\n        console.log(options, \"options\")\r\n\r\n        return options;\r\n\r\n    }\r\n\r\n\r\n    handleInputChange = (event) => {\r\n\r\n        let { isMulti = false, onChange, name } = this.props;\r\n        console.log(event, name)\r\n\r\n        const target = event.target;\r\n        const value = isMulti ? target.value : target;\r\n        this.setState({ selectedIds: value });\r\n        let body = {\r\n            target: {\r\n                name: name ? name : '',\r\n                type: 'select',\r\n                value: [],\r\n                label: ''\r\n            }\r\n        }\r\n        if (!!onChange) {\r\n            if (isMulti && value.length > 0) {\r\n                console.log(value)\r\n                value.forEach((array, index) => {\r\n                    let obj = {\r\n\r\n                        value: array.value,\r\n                        label: array.label\r\n                    }\r\n                    body.target.value.push(obj)\r\n                });\r\n            } else {\r\n                body.target.value = value.value\r\n                body.target.label = value.label\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        onChange(body);\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { query, isApiCall } = this.state;\r\n        let { setValue, type } = this.props;\r\n        console.log(prevProps.cacheUniq, this.props.cacheUniq, \"cacheUniq\")\r\n        if (prevProps.cacheUniq !== this.props.cacheUniq) {\r\n\r\n            console.log(type, prevProps.cacheUniq, this.props.cacheUniq, isApiCall)\r\n            query.page = 1;\r\n            this.setState({ isApiCall: true, selectedIds: [], query, selectList: [], reqTempList: [] })\r\n        }\r\n        if (prevProps.setValue !== this.props.setValue) {\r\n            console.log(setValue)\r\n            this.setState({ selectedIds: setValue })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let { selectedIds } = this.state;\r\n        let { isMulti = false, placeholder = 'Select', cacheUniq = '', name, disabled = false, defaultValue = '', className = '', isClearable = false } = this.props;\r\n\r\n        return (\r\n\r\n            <NormalSelect\r\n                async={true}\r\n                disabled={disabled}\r\n                className={`${className}  ${!!isMulti ? 'multi-select' : ''}`}\r\n                cacheUniq={cacheUniq}\r\n                isSearchable={true}\r\n                debounceTimeout={300}\r\n                name={name}\r\n                isMulti={isMulti}\r\n                isClearable={isClearable}\r\n                placeholder={placeholder}\r\n                options={this.getSelectList}\r\n                value={!!selectedIds ? selectedIds : defaultValue}\r\n                onChange={this.handleInputChange}\r\n            />\r\n\r\n        );\r\n    }\r\n}\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\n\r\nexport class Badge extends Component {\r\n  render() {\r\n    const { up, down, bgColor } = this.props;\r\n    return (\r\n      <span\r\n        class={`badge p-2 mx-2 rounded-pill text-dark ${bgColor || \"bg-white\"}`}\r\n      >\r\n        <img\r\n          src={`/icon/${up !== undefined ? \"up-icon\" : \"down-icon\"}.svg`}\r\n          className=\"px-2\"\r\n          alt=\"\"\r\n          srcset=\"\"\r\n        />\r\n        {up ?? down} %\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React from \"react\";\r\nimport './toggle.scss'\r\n\r\nexport class NormalToggleSwitch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: 1,\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let {\r\n            className = \" \",\r\n            label = \" \",\r\n            value = \"\",\r\n            name = \"\",\r\n            id = Math.floor(Math.random() * 1000000),\r\n            onChange,\r\n            checked = false,\r\n            // inputClass = \"custom-control-input\",\r\n            disabled = false,\r\n      \r\n          } = this.props;\r\n\r\n        return (\r\n            <div className=\"toggle-switch\">\r\n            <label className={`switch ${className}`}>\r\n                <input\r\n                    disabled={disabled}\r\n                    type=\"checkbox\"\r\n                    name={name}\r\n                    value={value}\r\n                    checked={checked}\r\n\r\n                    onChange={({ target: { name, checked: Checked, type: checked } }) => {\r\n                        // console.log('sdsxzxz')\r\n                        onChange &&\r\n                            onChange({ target: { name, checked: Checked, type: checked } });\r\n                    }}\r\n                />\r\n                <span className=\"slider round\"></span>\r\n            </label>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Header } from \"./header\";\r\n// import { EXIST_LOCAL_STORAGE } from \"../../service/constants\";\r\nimport { history } from \"../../helpers\";\r\nexport class MainLayout extends React.Component {\r\n\r\n\r\n  componentWillMount() {\r\n    // let authToken = localStorage.getItem(EXIST_LOCAL_STORAGE.AUTHTOKEN);\r\n    // let userId = localStorage.getItem(EXIST_LOCAL_STORAGE.USER_ID);\r\n    // console.log(userId )\r\n    // console.log(authToken)\r\n    // console.log('-----------',!(!!authToken && !!userId))\r\n    // if (!(!!authToken && !!userId)) {\r\n    //   console.log('no token')\r\n    //   history.push(\"/auth/login\")\r\n    \r\n    // }else{\r\n    //   console.log('Yes token')\r\n     \r\n    // }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      \r\n       \r\n        <div className=\"d-flex\" id=\"wrapper\">\r\n        {/* <Sidebar /> */}\r\n     \r\n        \r\n          <div id=\"page-content-wrapper\" className=\"w-100\">\r\n          <Header />\r\n          <div className=\"container\">\r\n          <section>{this.props.children}</section>\r\n          </div>\r\n           \r\n          </div>\r\n        </div>\r\n        {/* <Footer /> */}\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './auth.scss'\r\nexport class AuthLayout extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"auth-layout\">\r\n\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"row no-gutter\">\r\n                        <div class=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\r\n                        <div class=\"col-md-8 col-lg-6\">\r\n                            <div class=\"login d-flex align-items-center py-5\">\r\n                                <div class=\"container\">\r\n                                    {this.props.children}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { EXIST_LOCAL_STORAGE,CURRENT_USER } from './constants'\r\nimport { isJwtExpired } from 'jwt-check-expiration';\r\nexport const axiosInstance = axios.create({\r\n  // baseURL: process.env.REACT_APP_BASE_URL,\r\n  headers: {\r\n\r\n  }\r\n});\r\n\r\n\r\nexport const logout = () => {\r\n  axiosInstance.defaults.headers.common['Authorization'] = '';\r\n  localStorage.clear();\r\n  // history.push('/');\r\n  window.location.reload(true);\r\n};\r\n\r\nexport const isAuthenticated = (req, res, next) => {\r\n  let accessToken = localStorage.getItem(EXIST_LOCAL_STORAGE.AUTHTOKEN);\r\n  if (!!accessToken) {\r\n    const jwtDecoded = jwtDecode(accessToken);\r\n    if (new Date() < new Date(jwtDecoded.exp * 1e3)) {\r\n      return true;\r\n    } else {\r\n      localStorage.removeItem(EXIST_LOCAL_STORAGE);\r\n      return false\r\n    }\r\n\r\n  } else {\r\n    console.error('session expired')\r\n  }\r\n\r\n}\r\n\r\nexport const jwtDecodeDetails = (req, res, next) => {\r\n  let accessToken = localStorage.getItem(EXIST_LOCAL_STORAGE.AUTHTOKEN);\r\n  if (!!accessToken) {\r\n    let userObj=JSON.parse(localStorage.getItem(CURRENT_USER))\r\n    return {...jwtDecode(accessToken),userObj};\r\n\r\n  } else {\r\n    console.error('Jwd null')\r\n  }\r\n\r\n}","/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\n\r\n\r\nimport { store } from 'react-notifications-component';\r\n\r\nexport const Toast = ({ type = 'success', message,title }) => {\r\n  console.log(typeof message);\r\n    store.addNotification({\r\n        title: title,\r\n        message: message,\r\n        type: type,\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animated\", \"fadeIn\"],\r\n        animationOut: [\"animated\", \"fadeOut\"],\r\n        dismiss: {\r\n          duration: 5000,\r\n          onScreen: true\r\n        }\r\n      });\r\n}\r\n// Notification type\r\n// success\r\n// danger\r\n// info\r\n// default\r\n// warning","import { collection, addDoc, setDoc, updateDoc, query, doc, where, getDocs, getDoc } from \"firebase/firestore\";\r\nimport { getAuth, deleteUser } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { isAuthenticated, jwtDecodeDetails } from '../../service/utilities';\r\nimport { STATUS } from '../../service/constants'\r\nimport { CURRENT_USER } from '../../service/constants'\r\nimport { Toast } from '../../service/toast';\r\n\r\n\r\nexport const createUser = (body) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            if (isAuthenticated()) {\r\n                let { user_id, userObj: { fName, lName } } = jwtDecodeDetails();\r\n                body.createdBy.name = fName + \" \" + lName;\r\n                body.createdBy.userId = user_id;\r\n                const docRef = await setDoc(doc(getFirestore(), \"user\", body.userId), body);\r\n                resolve(docRef)\r\n            } else {\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' })\r\n            reject(e)\r\n            console.error(\"Error adding document: \", e);\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUser = (body, id) => {\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        delete body.id;\r\n        try {\r\n            if (isAuthenticated) {\r\n                let { user_id, userObj: { fName, lName } } = jwtDecodeDetails();\r\n                body.updatedBy.name = fName + \" \" + lName;\r\n                body.updatedBy.date = new Date().toISOString();\r\n                body.updatedBy.userId = user_id;\r\n                const docRef = await updateDoc(doc(getFirestore(), \"user\", id), body);\r\n                resolve(docRef)\r\n            } else {\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' })\r\n            console.error(\"Error adding document: \", e);\r\n            reject(e)\r\n\r\n        }\r\n    })\r\n}\r\n\r\nexport const getAllUser = (body) => {\r\n    const auth = getAuth();\r\n    const user = auth.currentUser;\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            if (isAuthenticated) {\r\n                // const querySnapshot = getDocs(query(collection(getFirestore(), \"user\"), where(\"status\", \"==\", STATUS.DELETED)))\r\n\r\n                const querySnapshot = await getDocs(query(collection(getFirestore(), \"user\"), where(\"status\", \"!=\", STATUS.DELETED)));\r\n                let data = []\r\n                querySnapshot.forEach((doc) => {\r\n                    // doc.data() is never undefined for query doc snapshots\r\n                    data.push({ ...doc.data(), id: doc.id })\r\n                });\r\n                resolve(data)\r\n            } else {\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' })\r\n            reject(e)\r\n            console.error(\"Error adding document: \", e);\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getUserDetail = (body) => {\r\n    const auth = getAuth();\r\n    const user = auth.currentUser;\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            if (isAuthenticated) {\r\n                // const querySnapshot = getDocs(query(collection(getFirestore(), \"user\"), where(\"status\", \"==\", STATUS.DELETED)))\r\n\r\n                const docSnap = await getDoc(doc(getFirestore(), \"user\", body));\r\n                if (docSnap.exists()) {\r\n                    localStorage.setItem(CURRENT_USER, JSON.stringify(docSnap.data()));\r\n                    resolve(docSnap.data())\r\n                } else {\r\n                    // doc.data() will be undefined in this case\r\n\r\n                }\r\n\r\n\r\n            } else {\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' })\r\n            reject(e)\r\n            console.error(\"Error adding document: \", e);\r\n        }\r\n    })\r\n}\r\n\r\n","import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { EXIST_LOCAL_STORAGE } from '../../service/constants'\r\nimport { createUser, getUserDetail } from '../user';\r\nimport { Toast } from '../../service/toast';\r\n\r\nexport const createAuthentication = (body) => {\r\n    return new Promise((resolve, reject) => {\r\n        let { email } = body;\r\n        const auth = getAuth();\r\n\r\n        createUserWithEmailAndPassword(auth, email, 'welcome@123')\r\n            .then((userCredential) => {\r\n                // Signed in \r\n                const user = userCredential.user;\r\n                body.userId = user.uid;\r\n                createUser(body).then((data) => {\r\n                    resolve(data)\r\n                }).catch((error) => {\r\n                    reject(error)\r\n\r\n                    // ..\r\n                });\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' })\r\n                reject(error)\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                // ..\r\n            });\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const userSignin = ({ username, password }) => {\r\n    return new Promise((resolve, reject) => {\r\n        const auth = getAuth();\r\n        signInWithEmailAndPassword(auth, username, password).then(({ user: { accessToken, uid } }) => {\r\n            // Signed in \r\n            localStorage.setItem(EXIST_LOCAL_STORAGE.AUTHTOKEN, accessToken);\r\n\r\n            getUserDetail(uid)\r\n\r\n\r\n\r\n            resolve(accessToken)\r\n            // ...\r\n        }).catch((error) => {\r\n\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            if (errorCode === 'auth/wrong-password') {\r\n                Toast({ type: 'danger', message: 'Sorry, your password is incorrect. Please try again', title: 'Error' })\r\n                reject(errorCode)\r\n            } else if (['auth/user-not-found', 'auth/invalid-email'].includes(errorCode)) {\r\n                Toast({ type: 'danger', message: 'Sorry, your email is incorrect. Please try again', title: 'Error' })\r\n                reject(errorCode)\r\n            } else {\r\n                Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' });\r\n                reject(error)\r\n            }\r\n\r\n            // ..\r\n        });\r\n    })\r\n}","import React from \"react\";\r\n// import \"./login.scss\";\r\nimport {\r\n  NormalInput,\r\n  NormalButton,\r\n  NormalCheckbox\r\n} from \"../../../components/common\";\r\n// import { Link } from \"react-router-dom\";\r\nimport SimpleReactValidator from 'simple-react-validator';\r\n// import { userSignin } from \"../../../redux/actions/login\";\r\nimport { history } from \"../../../helpers\";\r\nimport { EXIST_LOCAL_STORAGE } from \"../../../service/constants\";\r\nimport { userSignin } from '../../../api'\r\nexport class Login extends React.Component {\r\n  state = {\r\n    loginForm: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    passwordType: 'password',\r\n    isFormLoder: false,\r\n    isKeepMe: false,\r\n    keepMeObj: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    isResErr:''\r\n  };\r\n\r\n\r\n\r\n  //on lode function start\r\n  componentWillMount() {\r\n    //keep login function start\r\n    let isKeepMe = localStorage.getItem(EXIST_LOCAL_STORAGE.IS_KEEP_ME);\r\n    let keepMeObj = JSON.parse(localStorage.getItem(EXIST_LOCAL_STORAGE.KEEP_ME_OBJ));\r\n    localStorage.clear();\r\n    if (isKeepMe === '1') {\r\n      keepMeObj = Object.assign({}, keepMeObj);\r\n      this.setState({ isKeepMe, loginForm: keepMeObj });\r\n      localStorage.setItem(EXIST_LOCAL_STORAGE.IS_KEEP_ME, isKeepMe);\r\n      localStorage.setItem(EXIST_LOCAL_STORAGE.KEEP_ME_OBJ, JSON.stringify(keepMeObj));\r\n    } else {\r\n      this.setState({ isKeepMe: false });\r\n    }\r\n\r\n\r\n\r\n    //validation set function start\r\n    this.validator = new SimpleReactValidator({\r\n      element: message => <span className=\"error-message text-danger validNo fs14\">{message}</span>,\r\n      autoForceUpdate: this,\r\n    });\r\n  }\r\n\r\n\r\n  //handle input change function call start\r\n  handleInputChange = e => {\r\n    let { value, name } = e.target;\r\n    this.setState({\r\n      loginForm: {\r\n        ...this.state.loginForm,\r\n        [name]: value\r\n      }\r\n    })\r\n  };\r\n\r\n\r\n  //login submit API call function  start\r\n  handleSubmit = () => {\r\n    // history.push(`/dashboard`)\r\n    let { loginForm, isKeepMe, keepMeObj } = this.state;\r\n    this.setState({ isResErr: false })\r\n    if (this.validator.allValid()) {\r\n      this.validator.hideMessages();\r\n      this.setState({ isFormLoder: true });\r\n      userSignin(loginForm).then((data) => {\r\n        this.setState({ isFormLoder: false });\r\n        if (!!data) {\r\n          if (isKeepMe) {\r\n            keepMeObj.username = loginForm.username;\r\n            keepMeObj.password = loginForm.password;\r\n            this.setState({ keepMeObj });\r\n            localStorage.setItem(EXIST_LOCAL_STORAGE.IS_KEEP_ME, 1);\r\n            localStorage.setItem(EXIST_LOCAL_STORAGE.KEEP_ME_OBJ, JSON.stringify(keepMeObj));\r\n          } else {\r\n            localStorage.setItem(EXIST_LOCAL_STORAGE.IS_KEEP_ME, 0);\r\n            localStorage.setItem(EXIST_LOCAL_STORAGE.KEEP_ME_OBJ, JSON.stringify(keepMeObj));\r\n          }\r\n          history.push(`/dashboard`);\r\n        }\r\n      }).catch((error) => {\r\n        if(error==='auth/wrong-password'){\r\n          this.setState({ isFormLoder: false });\r\n\r\n        }else{\r\n\r\n        }\r\n        console.error(error);\r\n        this.setState({ isFormLoder: false ,isResErr:error});\r\n      });\r\n\r\n    } else {\r\n      this.validator.showMessages();\r\n    }\r\n\r\n  }\r\n\r\n  // handlekeep me change start\r\n  handleisKeepMeChange = () => {\r\n    let { isKeepMe } = this.state;\r\n    this.setState({ isKeepMe: !isKeepMe });\r\n  }\r\n\r\n  render() {\r\n    let { loginForm, isFormLoder, isResErr, isKeepMe, passwordType } = this.state;\r\n    return (\r\n\r\n      <>\r\n        <div class=\"row login-page\">\r\n          <div class=\"col-md-9 col-lg-8 mx-auto\">\r\n\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-md-12\">\r\n                <img width=\"72\" height=\"57\" src=\"https://getbootstrap.com/docs/5.0/assets/brand/bootstrap-logo.svg\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-md-12\">\r\n                <label className=\"text-sub-title\">Sign into your <strong>Avatar Management Console</strong> </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 mb-3\">\r\n                <div class=\"form-group mb-0\">\r\n                  <label>Login</label>\r\n                  <NormalInput\r\n                    placeholder=\"Email address or phone number\"\r\n                    name=\"username\"\r\n                    value={loginForm.username}\r\n                    className=\"form-control border-left-0\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n\r\n                </div>\r\n                {this.validator.message('User Name', loginForm.username, 'required')}\r\n                {['auth/user-not-found', 'auth/invalid-email'].includes(isResErr) ?\r\n                  <span className=\"text-danger validNo fs14\">\r\n                  Sorry, your email is incorrect. Please try again\r\n                  </span> : ''}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div class=\"form-group mb-0\">\r\n                  <label>Password</label>\r\n                  <NormalInput\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    type={passwordType}\r\n                    value={loginForm.password}\r\n                    className=\"form-control border-left-0  border-right-0\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n\r\n                </div>\r\n                {this.validator.message('Password', loginForm.password, 'required')}\r\n                {isResErr=='auth/wrong-password' ?\r\n                  <span className=\"text-danger validNo fs14\">\r\n                  Sorry, your password is incorrect. Please try again\r\n                  </span> : ''}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <NormalCheckbox\r\n                  name=\"isKeepMe\"\r\n                  checked={isKeepMe}\r\n                  className=\"mb-3 mt-3\"\r\n                  label=\"Keep me signed in\"\r\n                  id=\"isKeepMe\"\r\n                  onChange={this.handleisKeepMeChange}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6 text-end\">\r\n                <NormalButton\r\n                  onClick={this.handleSubmit}\r\n                  id=\"cancelProfile\"\r\n                  label=\"sign in\"\r\n                  outline={false}\r\n                  loader={isFormLoder}\r\n                  className=\"mb-3 mt-3  btn-primary\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n\r\n            {/* <div class=\"text-center\">\r\n              <a class=\"small\" href=\"#\">Forgot password?</a></div> */}\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport class Dashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"page-titel mb-4 \">\r\n          Dashboard\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n\r\nexport const productObj = {\r\n\r\n    name: '',\r\n    code:'',\r\n    totalM:0,\r\n    wastageM:0,\r\n    inhouseDate:'',\r\n    amount:0,\r\n    totalLengthMeter:'',\r\n    supplierId:'',\r\n    completedDate:\"\",\r\n    cutting: {\r\n        small: 0,\r\n        medium: 0,\r\n        large: 0,\r\n    },\r\n    stitching: {\r\n        small: 0,\r\n        medium: 0,\r\n        large: 0,\r\n    },\r\n    ironing: {\r\n        small: 0,\r\n        medium: 0,\r\n        large: 0,\r\n    },\r\n    packing: {\r\n        small: 0,\r\n        medium: 0,\r\n        large: 0,\r\n    },\r\n    shipment: {\r\n        small: 0,\r\n        medium: 0,\r\n        large: 0,\r\n    },\r\n    status:'',\r\n    createdBy:{\r\n        userId:'',\r\n        date:new Date().toISOString(),\r\n        name:''\r\n    },\r\n    updatedBy:{\r\n        userId:'',\r\n        date:'',\r\n        name:''\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport { NormalInput,NormalSelect,NormalButton } from '../../../common'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport './productEdit.scss';\r\nimport { productObj } from '../../../../entityModel/product';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { USER_TYPE, PRODUCT_STATUS, METER } from '../../../../service/constants';\r\nimport {createProduct,updateProduct} from '../../../../api/'\r\nexport class ProductEdit extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isFormLoder: false,\r\n            productObj\r\n        }\r\n        this.validator = new SimpleReactValidator({\r\n            className: 'text-danger'\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        let { productEditObj } = this.props;\r\n        if (Object.keys(productEditObj).length > 0) {\r\n            this.setState({ productObj: productEditObj })\r\n        }\r\n    }\r\n\r\n    \r\n    handleInputChange = (event) => {\r\n        let { productObj } = this.state;\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name.split(\".\").length > 1 ? target.name.split(\".\") : target.name;\r\n        console.log(value,name)\r\n\r\n        if (!Array.isArray(name)) {\r\n            this.setState({\r\n                productObj: {\r\n                    ...productObj,\r\n                    [name]: value\r\n                }\r\n            }, () => console.log(productObj));\r\n\r\n            \r\n        } else {\r\n\r\n            this.setState({\r\n                productObj: {\r\n                    ...productObj,\r\n                    [name[0]]: {\r\n                        ...productObj[name[0]],\r\n                        [name[1]]: Number(value)\r\n                    }\r\n                }\r\n            }, () => console.log(productObj))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleFormSubmit = () => {\r\n        let { productObj } = this.state;\r\n        let { toggle, supplierId } = this.props;\r\n      \r\n        productObj.supplierId = supplierId;\r\n        productObj.code =Math.floor(Math.random() * 1000000);\r\n        productObj.completedDate =productObj.status === PRODUCT_STATUS.COMPLETED?new Date().toISOString():''\r\n\r\n        productObj.wastageM = Number(productObj.totalLengthMeter) - ((Number(productObj.cutting.small) * METER.SMALL) + (Number(productObj.cutting.medium) * METER.MEDIUM) + (Number(productObj.cutting.large) * METER.LARGE));\r\n\r\n        if (this.validator.allValid()) {\r\n            this.setState({ isFormLoder: true });\r\n            let apiCall = productObj.hasOwnProperty('id') ? updateProduct(Object.assign({}, productObj), productObj.id) : createProduct(productObj)\r\n            apiCall.then((data) => {\r\n                this.setState({ isFormLoder: false });\r\n                toggle('success')\r\n            }).catch((error) => {\r\n                this.setState({ isFormLoder: false });\r\n                console.error(error)\r\n            });\r\n        } else {\r\n            this.validator.showMessages();\r\n            // rerender to show messages for the first time\r\n            // you can use the autoForceUpdate option to do this automatically`\r\n            this.forceUpdate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        let { productObj,isFormLoder } = this.state\r\n        let { isShow = false, toggle = '' } = this.props;\r\n        let productStatusList=[{ label: 'In Progress', value: PRODUCT_STATUS.IN_PROGRESS }, { label: 'Completed', value: PRODUCT_STATUS.COMPLETED }]\r\n        this.validator.purgeFields();\r\n        return (\r\n\r\n\r\n            <Modal isOpen={isShow} toggle={toggle} className='edit-modal'>\r\n                {/* <ModalHeader  ></ModalHeader> */}\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Product Edit</h5>\r\n                    <button type=\"button\" className=\"btn-close\" onClick={toggle} aria-label=\"Close\"></button>\r\n                </div>\r\n                <ModalBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Product Name</label>\r\n                                <NormalInput placeholder=\"Enter Product Name\" name=\"name\" onChange={this.handleInputChange} value={productObj.name} />\r\n                                {this.validator.message('Product Name', productObj.name, 'required')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">status</label>\r\n                                <NormalSelect options={productStatusList} name=\"status\" onChange={this.handleInputChange} value={productObj.status} placeholder=\"Seletct Status\" />\r\n                                {this.validator.message('status',productObj.status, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Inhouse Date</label>\r\n                                <NormalInput type=\"date\" placeholder=\"DD/MM/YYYY\" name=\"inhouseDate\" onChange={this.handleInputChange} value={productObj.inhouseDate} />\r\n                                {this.validator.message('Inhouse Date', productObj.inhouseDate, 'required')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Amount(INR)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Amount(INR)\" name=\"amount\" onChange={this.handleInputChange} value={productObj.amount} />\r\n                                {this.validator.message('Amount', productObj.amount, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Total Length in meters</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Total meters\" name=\"totalLengthMeter\" onChange={this.handleInputChange} value={productObj.totalLengthMeter} />\r\n                                {this.validator.message('Total Length in meters', productObj.totalLengthMeter, 'required')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"row\">\r\n                        {/* <div className=\"col-12\">\r\n                            <h4 className=\"content-title\">Cutting</h4>\r\n                        </div> */}\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Cutting(S)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Cutting(S)\" name=\"cutting.small\" onChange={this.handleInputChange} value={productObj.cutting.small} />\r\n                                {this.validator.message('Cutting(S)', productObj.cutting.small, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Cutting(M)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Cutting(M)\" name=\"cutting.medium\" onChange={this.handleInputChange} value={productObj.cutting.medium} />\r\n                                {this.validator.message('Cutting(M)', productObj.cutting.medium, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Cutting(L)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Cutting(L)\" name=\"cutting.large\" onChange={this.handleInputChange} value={productObj.cutting.large} />\r\n                                {this.validator.message('Cutting(L)', productObj.cutting.large, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Total Quantity</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Total Quantity\" disabled={true} onChange={() => { }} value={(productObj.cutting.small) + (productObj.cutting.medium) + (productObj.cutting.large)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Total Meters Used</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Total Meters Used\" disabled={true} onChange={() => { }} value={(Number(productObj.cutting.small) * METER.SMALL) + (Number(productObj.cutting.medium) * METER.MEDIUM) + (Number(productObj.cutting.large) * METER.LARGE)} />\r\n                                {this.validator.message('Shipment(S)',(Number(productObj.cutting.small) * METER.SMALL) + (Number(productObj.cutting.medium) * METER.MEDIUM) + (Number(productObj.cutting.large) * METER.LARGE),`required|between:0,${productObj.totalLengthMeter},num`, { messages: { between: 'The Total Meters may not be greater than Total Length in meters.' } })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"row\">\r\n                        {/* <div className=\"col-12\">\r\n                            <h4 className=\"content-title\">Cutting</h4>\r\n                        </div> */}\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Stitching(S)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Stitching(S)\" name=\"stitching.small\" onChange={this.handleInputChange} value={productObj.stitching.small} />\r\n                                {this.validator.message('Stitching(S)', productObj.stitching.small, `required|between:0,${productObj.cutting.small},num`, { messages: { between: 'The shipment(S) may not be greater than cutting(S).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Stitching(M)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Stitching(M)\" name=\"stitching.medium\" onChange={this.handleInputChange} value={productObj.stitching.medium} />\r\n                                {this.validator.message('Stitching(M)', productObj.stitching.medium, `required|between:0,${productObj.cutting.medium},num`,`required|between:0,${productObj.cutting.medium}`, { messages: { between: 'The shipment(M) may not be greater than cutting(M).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Stitching(L)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Stitching(L)\" name=\"stitching.large\" onChange={this.handleInputChange} value={productObj.stitching.large} />\r\n                                {this.validator.message('Stitching(L)', productObj.stitching.large, `required|between:0,${productObj.cutting.large},num`, { messages: { between: 'The shipment(L) may not be greater than cutting(L).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Total Quantity</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Total Quantity\" disabled={true} onChange={() => { }} value={Number(productObj.stitching.small) + Number(productObj.stitching.medium) + Number(productObj.stitching.large)} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"row\">\r\n                        {/* <div className=\"col-12\">\r\n                            <h4 className=\"content-title\">Cutting</h4>\r\n                        </div> */}\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Ironing(S)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Ironing(S)\" name=\"ironing.small\" onChange={this.handleInputChange} value={productObj.ironing.small} />\r\n                                {this.validator.message('Ironing(S)', productObj.ironing.small, `required|between:0,${productObj.cutting.small},num`, { messages: { between: 'The shipment(S) may not be greater than cutting(S).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Ironing(M)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Ironing(M)\" name=\"ironing.medium\" onChange={this.handleInputChange} value={productObj.ironing.medium} />\r\n                                {this.validator.message('Ironing(M)', productObj.ironing.medium, `required|between:0,${productObj.cutting.medium},num`, { messages: { between: 'The shipment(M) may not be greater than cutting(M).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Ironing(L)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Ironing(L)\" name=\"ironing.large\" onChange={this.handleInputChange} value={productObj.ironing.large} />\r\n                                {this.validator.message('Ironing(L)', productObj.ironing.large, `required|between:0,${productObj.cutting.large},num`, { messages: { between: 'The shipment(L) may not be greater than cutting(L).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Total Quantity</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Total Quantity\" disabled={true} onChange={() => { }} value={Number(productObj.ironing.small) + Number(productObj.ironing.medium) + Number(productObj.ironing.large)} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <hr />\r\n                    <div className=\"row\">\r\n                        {/* <div className=\"col-12\">\r\n                            <h4 className=\"content-title\">Cutting</h4>\r\n                        </div> */}\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Packing(S)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Packing(S)\" name=\"packing.small\" onChange={this.handleInputChange} value={productObj.packing.small} />\r\n                                {this.validator.message('Packing(S)', productObj.packing.small, `required|between:0,${productObj.cutting.small},num`, { messages: { between: 'The shipment(S) may not be greater than cutting(S).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Packing(M)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Packing(M)\" name=\"packing.medium\" onChange={this.handleInputChange} value={productObj.packing.medium} />\r\n                                {this.validator.message('Packing(M)', productObj.packing.medium, `required|between:0,${productObj.cutting.medium},num`, { messages: { between: 'The shipment(M) may not be greater than cutting(M).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Packing(L)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Packing(L)\" name=\"packing.large\" onChange={this.handleInputChange} value={productObj.packing.large} />\r\n                                {this.validator.message('Packing(L)', productObj.packing.large, `required|between:0,${productObj.cutting.large},num`, { messages: { between: 'The shipment(L) may not be greater than cutting(L).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Total Quantity</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Total Quantity\" disabled={true} onChange={() => { }} value={Number(productObj.packing.small) + Number(productObj.packing.medium) + Number(productObj.packing.large)} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <hr />\r\n                    <div className=\"row\">\r\n                        {/* <div className=\"col-12\">\r\n                            <h4 className=\"content-title\">Cutting</h4>\r\n                        </div> */}\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Shipment(S)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Shipment(S)\" name=\"shipment.small\" onChange={this.handleInputChange} value={productObj.shipment.small} />\r\n                                {this.validator.message('Shipment(S)', productObj.shipment.small,`required|between:0,${productObj.cutting.small},num`, { messages: { between: 'The shipment(S) may not be greater than cutting(S).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Shipment(M)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Shipment(M)\" name=\"shipment.medium\" onChange={this.handleInputChange} value={productObj.shipment.medium} />\r\n                                {this.validator.message('Shipment(M)', productObj.shipment.medium, `required|between:0,${productObj.cutting.medium},num`, { messages: { between: 'The shipment(M) may not be greater than cutting(M).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Shipment(L)</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Enter Shipment(L)\" name=\"shipment.large\" onChange={this.handleInputChange} value={productObj.shipment.large} />\r\n                                {this.validator.message('Shipment(L)', productObj.shipment.large, `required|between:0,${productObj.cutting.large},num`, { messages: { between: 'The shipment(L) may not be greater than cutting(L).' } })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Total Quantity</label>\r\n                                <NormalInput type=\"number\" placeholder=\"Total Quantity\" disabled={true} onChange={() => { }} value={Number(productObj.shipment.small) + Number(productObj.shipment.medium) + Number(productObj.shipment.large)} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Total Shipment</label>\r\n                                <NormalInput placeholder=\"Enter Total Shipment\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Completed Shipment</label>\r\n                                <NormalInput placeholder=\"Enter Completed Shipment\" />\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <NormalButton label={productObj.hasOwnProperty('id') ?\"Update\":\"Save\"} loader={isFormLoder} onClick={this.handleFormSubmit} />\r\n                    <NormalButton label=\"Cancel\" className=\"btn-danger\" disabled={isFormLoder} onClick={toggle} />\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n","import { collection, addDoc, updateDoc, query, doc, where, getDocs, runTransaction } from \"firebase/firestore\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { isAuthenticated, jwtDecodeDetails } from '../../service/utilities'\r\nimport { Toast } from '../../service/toast';\r\n\r\n\r\nexport const createProduct = (body) => {\r\n    console.log(JSON.stringify(body))\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            if (isAuthenticated) {\r\n                let { user_id, userObj: { fName, lName } } = jwtDecodeDetails();\r\n                body.createdBy.name = fName + \" \" + lName;\r\n                body.createdBy.userId = user_id;\r\n                const docRef = await addDoc(collection(getFirestore(), \"product\"), body);\r\n                console.log(\"Document written with ID: \", JSON.stringify(docRef));\r\n                resolve(docRef)\r\n            } else {\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' })\r\n            reject(e)\r\n            console.error(\"Error adding document: \", e);\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateProduct = (body, id) => {\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        delete body.id;\r\n        try {\r\n            if (isAuthenticated) {\r\n                let { user_id, userObj: { fName, lName } } = jwtDecodeDetails();\r\n                body.updatedBy.userId = user_id;\r\n                body.updatedBy.date = new Date().toISOString();\r\n                body.updatedBy.name = fName + \" \" + lName;\r\n                const docRef = await updateDoc(doc(getFirestore(), \"product\", id), body);\r\n                resolve(docRef)\r\n            } else {\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' })\r\n            console.error(\"Error adding document: \", e);\r\n            reject(e)\r\n\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const getAllProducts = (status) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            if (isAuthenticated) {\r\n                // const querySnapshot = await getDocs(collection(getFirestore(), \"product\"));\r\n                const querySnapshot = await getDocs(query(collection(getFirestore(), \"product\"), where(\"status\", \"==\", status)));\r\n                let data = []\r\n                querySnapshot.forEach((doc) => {\r\n                    // doc.data() is never undefined for query doc snapshots\r\n                    data.push({ ...doc.data(), id: doc.id });\r\n\r\n\r\n                });\r\n                resolve(data)\r\n            } else {\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' })\r\n            reject(e)\r\n            console.error(\"Error adding document: \", e);\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { NormalInput, NormalButton } from '../../../common'\r\nimport './productList.scss'\r\nimport { Link } from \"react-router-dom\";\r\nimport { ProductEdit } from '../productEdit'\r\nimport { getAllProducts } from '../../../../api';\r\nimport moment from 'moment';\r\nimport { PRODUCT_STATUS } from '../../../../service/constants'\r\nexport class ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isProductFormModal: false,\r\n            productList: [],\r\n            productEditObj: {},\r\n            tabActive: PRODUCT_STATUS.IN_PROGRESS,\r\n            isLoder: false,\r\n            searchName: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProductList(PRODUCT_STATUS.IN_PROGRESS);\r\n    }\r\n\r\n    getAllProductList = (status) => {\r\n        this.setState({ isLoder: true });\r\n        getAllProducts(status).then((productList) => {\r\n            this.setState({ isLoder: false, productList, isNodata: productList.length === 0 });\r\n        }).catch((error) => {\r\n            this.setState({ isLoder: false });\r\n            console.error(error)\r\n        });\r\n    }\r\n\r\n    handleTogleEditModule = (data) => {\r\n        let { isProductFormModal } = this.state;\r\n        this.setState({ isProductFormModal: !isProductFormModal, productEditObj: {} })\r\n        if (data === 'success') {\r\n            this.getAllProductList()\r\n        }\r\n\r\n    }\r\n\r\n    handleTabChange = (tabActive) => {\r\n        this.setState({ tabActive });\r\n        this.getAllProductList(tabActive);\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        let { tabActive, productList,isNodata } = this.state;\r\n        if (!!value && !isNodata) {\r\n            const result = !!value ? [...productList].filter(({ name }) => name.toLowerCase().includes(value.toLowerCase())) : productList;\r\n            this.setState({ productList: result, isNodata: result.length === 0, searchName: value });\r\n        } else {\r\n            this.setState({ searchName: value });\r\n            this.getAllProductList(tabActive);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let { match: { params: { supplierId } } } = this.props;\r\n        let { isProductFormModal, isNodata, productList, productEditObj, tabActive, isLoder, searchName } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"row mb-4\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"input-group search-input mb-3\">\r\n                            <span className=\"input-group-text bi bi-search\"></span>\r\n                            <NormalInput onChange={this.handleSearch} value={searchName} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 text-end\">\r\n                        <NormalButton label='Add New' className=\"btn-sm btn-primary\" onClick={() => this.setState({ isProductFormModal: true })} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-md-6\">\r\n                        <ul className=\"nav nav-pills\">\r\n                            <li className=\"nav-item\" onClick={() => this.handleTabChange(PRODUCT_STATUS.IN_PROGRESS)}>\r\n                                <a className={`nav-link ${tabActive === PRODUCT_STATUS.IN_PROGRESS ? 'active' : ''}`}>Pending </a>\r\n                            </li>\r\n                            <li className=\"nav-item\" onClick={() => this.handleTabChange(PRODUCT_STATUS.COMPLETED)}>\r\n                                <a className={`nav-link ${tabActive === PRODUCT_STATUS.COMPLETED ? 'active' : ''}`}>Completed</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {isLoder ?\r\n                        <>\r\n                            {[1, 2, 3, 4, 5, 6].map((data, i) =>\r\n                                <div className=\"col-md-4 mb-4 \">\r\n                                    <div className=\"card product-card loder-card\">\r\n                                        {/* <img src=\"...\" className=\"card-img-top\" alt=\"...\" /> */}\r\n                                        <div className=\"card-body\">\r\n\r\n                                            <h5 className=\"card-title skeletonLoader\">&nbsp;</h5>\r\n                                            <p className=\"text-muted title-sub skeletonLoader\">&nbsp;</p>\r\n\r\n\r\n                                        </div>\r\n                                        <div className=\"text-center card-footer\">\r\n                                            <button className=\"btn btn-sm skeletonLoader\" type=\"button\">&nbsp;</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                        :\r\n                        <>\r\n                            {!isNodata && productList.map(({ name, code = '', completedDate, totalLengthMeter, cutting, inhouseDate, stitching, ironing, packing, shipment, wastageM, id, updatedBy, createdBy }, i) =>\r\n                                <div className=\"col-md-4 mb-4\">\r\n                                    <div className=\"card product-card\">\r\n                                        {/* <img src=\"...\" className=\"card-img-top\" alt=\"...\" /> */}\r\n                                        <div className=\"card-body\">\r\n\r\n                                            <h5 className=\"card-title\">{name}   <small className=\"text-muted float-end d-flex\">{code}</small></h5>\r\n\r\n                                            <span className=\"text-danger float-end\">wastage: {wastageM}M</span>\r\n                                            <span className=\"text-total\">Total: {totalLengthMeter}M</span>\r\n                                            {/* <hr> */}\r\n                                            {/* <div className=\"\">\r\n                                    <h4 className=\"f5\">wastage: <span className=\"text-danger\">20M</span> </h4>\r\n\r\n                                </div> */}\r\n                                            <table className=\"table mt-2\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th scope=\"col\"></th>\r\n                                                        <th scope=\"col\">Small</th>\r\n                                                        <th scope=\"col\">Medium</th>\r\n                                                        <th scope=\"col\">Large</th>\r\n                                                        <th scope=\"col\">Total</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td><strong>Cutting</strong></td>\r\n                                                        <td>{cutting.small}</td>\r\n                                                        <td>{cutting.medium}</td>\r\n                                                        <td>{cutting.large}</td>\r\n                                                        <td>{cutting.small + cutting.medium + cutting.large}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td><strong>Stitching</strong></td>\r\n                                                        <td>{stitching.small}</td>\r\n                                                        <td>{stitching.medium}</td>\r\n                                                        <td>{stitching.large}</td>\r\n                                                        <td>{stitching.small + stitching.medium + stitching.large}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td><strong>Ironing</strong></td>\r\n                                                        <td>{ironing.small}</td>\r\n                                                        <td>{ironing.medium}</td>\r\n                                                        <td>{ironing.large}</td>\r\n                                                        <td>{ironing.small + ironing.medium + ironing.large}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td><strong>Packing</strong></td>\r\n                                                        <td>{packing.small}</td>\r\n                                                        <td>{packing.medium}</td>\r\n                                                        <td>{packing.large}</td>\r\n                                                        <td>{packing.small + packing.medium + packing.large}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td><strong>Shipment</strong></td>\r\n                                                        <td>{shipment.small}</td>\r\n                                                        <td>{shipment.medium}</td>\r\n                                                        <td>{shipment.large}</td>\r\n                                                        <td>{shipment.small + shipment.medium + shipment.large}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td><strong>In-house Date:</strong></td>\r\n                                                        <td colspan=\"4\">{moment(inhouseDate).format(\"Do MMM, YYYY\")}</td>\r\n                                                    </tr>\r\n                                                    {tabActive === PRODUCT_STATUS.COMPLETED ?\r\n                                                        <tr>\r\n                                                            <td><strong>Completed Date:</strong></td>\r\n                                                            <td colspan=\"4\">{moment(completedDate).format(\"Do MMM, YYYY\")}</td>\r\n                                                        </tr> : \"\"}\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <p className=\"updated-text mb-0\">Updated By <strong>{updatedBy.name}</strong> on <strong>{moment(!!updatedBy.data ? updatedBy.date : createdBy.date).format(\"Do MMM, YYYY\")}</strong></p>\r\n                                            {/* <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a> */}\r\n                                        </div>\r\n                                        <div className=\"text-center card-footer\">\r\n                                            <ul className=\"nav\">\r\n                                                <li className=\"nav-item\">\r\n                                                    <Link className=\"nav-link text-primary\" onClick={() => this.setState({ isProductFormModal: !isProductFormModal })}>View </Link>\r\n                                                </li>\r\n                                                <li className=\"nav-item\">\r\n                                                    <Link className=\"nav-link text-success\" onClick={() => this.setState({ isProductFormModal: !isProductFormModal, productEditObj: productList[i] })}>Edit</Link>\r\n                                                </li>\r\n                                                <li className=\"nav-item\">\r\n                                                    <a className=\"nav-link text-danger\" href=\"#\">Delete</a>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </>}\r\n                    {isNodata ? <h4 className=\"text-center  mt-5\">No data available</h4> : ''}\r\n                </div>\r\n                {isProductFormModal ?\r\n                    <ProductEdit supplierId={supplierId} productEditObj={productEditObj} isShow={isProductFormModal} toggle={this.handleTogleEditModule} />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import {STATUS} from '../service/constants'\r\n\r\nexport const supplierObj = {\r\n\r\n    name: '',\r\n    code:'',\r\n    status:STATUS.ACTIVE,\r\n    createdBy:{\r\n        userId:'',\r\n        date:new Date().toISOString(),\r\n        name:''\r\n    },\r\n    updatedBy:{\r\n        userId:'',\r\n        date:'',\r\n        name:''\r\n    }\r\n\r\n}","import { collection, addDoc, updateDoc, query, doc, where, getDocs } from \"firebase/firestore\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { isAuthenticated, jwtDecodeDetails } from '../../service/utilities'\r\nimport { Toast } from '../../service/toast';\r\n\r\n\r\nexport const createSupplier = (body) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            if (isAuthenticated) {\r\n                let { user_id, userObj: { fName, lName } } = jwtDecodeDetails();\r\n                body.createdBy.name = fName + \" \" + lName;\r\n                body.createdBy.userId = user_id;\r\n                const docRef = await addDoc(collection(getFirestore(), \"supplier\"), body);\r\n                console.log(\"Document written with ID: \", JSON.stringify(docRef));\r\n                resolve(docRef)\r\n            } else {\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            reject(e)\r\n            console.error(\"Error adding document: \", e);\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const updateSupplier = (body, id) => {\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        delete body.id;\r\n        try {\r\n            if (isAuthenticated) {\r\n                let { user_id, userObj: { fName, lName } } = jwtDecodeDetails();\r\n                body.updatedBy.userId = user_id;\r\n                body.updatedBy.date = new Date().toISOString();\r\n                body.updatedBy.name = fName + \" \" + lName;\r\n                const docRef = await updateDoc(doc(getFirestore(), \"supplier\", id), body);\r\n                resolve(docRef)\r\n            } else {\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(\"Error adding document: \", e);\r\n            Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' })\r\n            reject(e)\r\n\r\n        }\r\n    })\r\n}\r\n\r\nexport const getAllSupplier = (body) => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            if (isAuthenticated) {\r\n                const querySnapshot = await getDocs(collection(getFirestore(), \"supplier\"));\r\n                let data = [];\r\n                let cont = 0\r\n                console.log(cont, querySnapshot.size)\r\n                if (querySnapshot.size !== 0) {\r\n                    await querySnapshot.forEach((doc, index) => {\r\n                      \r\n                        getAllProductsAggregation().then((countObj) => {\r\n                            cont++\r\n                            data.push({ ...doc.data(), ...countObj, id: doc.id });\r\n                            if (cont === querySnapshot.size) {\r\n                                console.log(cont , querySnapshot.size,'end res')\r\n                                resolve(data)\r\n                            }\r\n                        }).catch((error) => {\r\n                            Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' })\r\n                            console.error(error);\r\n\r\n                        });\r\n\r\n                    });\r\n                } else {\r\n                    resolve(data)\r\n                }\r\n\r\n            } else {\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            Toast({ type: 'danger', message: 'Internal Server Error', title: 'Error' })\r\n            reject(e);\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const getAllProductsAggregation = (body) => {\r\n    return new Promise(async (resolve, reject) => {\r\n\r\n        try {\r\n            const querySnapshot = await getDocs(query(collection(getFirestore(), \"product\"), where(\"supplierId\", \"==\", '5ypsmSxam5bvfW2IM0rJ')));\r\n            let data = {\r\n                cutting: {\r\n                    small: 0,\r\n                    medium: 0,\r\n                    large: 0,\r\n                },\r\n                stitching: {\r\n                    small: 0,\r\n                    medium: 0,\r\n                    large: 0,\r\n                },\r\n                ironing: {\r\n                    small: 0,\r\n                    medium: 0,\r\n                    large: 0,\r\n                },\r\n                packing: {\r\n                    small: 0,\r\n                    medium: 0,\r\n                    large: 0,\r\n                },\r\n                shipment: {\r\n                    small: 0,\r\n                    medium: 0,\r\n                    large: 0,\r\n                },\r\n                wastageM: 0\r\n            }\r\n            if (querySnapshot.size !== 0) {\r\n                querySnapshot.forEach((doc) => {\r\n                    data.cutting.small = data.cutting.small + doc.data().cutting.small;\r\n                    data.cutting.medium = data.cutting.medium + doc.data().cutting.medium;\r\n                    data.cutting.large = data.cutting.large + doc.data().cutting.large;\r\n\r\n                    data.stitching.small = data.stitching.small + doc.data().stitching.small;\r\n                    data.stitching.medium = data.stitching.medium + doc.data().stitching.medium;\r\n                    data.stitching.large = data.stitching.large + doc.data().stitching.large;\r\n\r\n                    data.ironing.small = data.ironing.small + doc.data().ironing.small;\r\n                    data.ironing.medium = data.ironing.medium + doc.data().ironing.medium;\r\n                    data.ironing.large = data.ironing.large + doc.data().ironing.large;\r\n\r\n                    data.packing.small = data.packing.small + doc.data().packing.small;\r\n                    data.packing.medium = data.packing.medium + doc.data().packing.medium;\r\n                    data.packing.large = data.packing.large + doc.data().packing.large;\r\n\r\n                    data.shipment.small = data.shipment.small + doc.data().shipment.small;\r\n                    data.shipment.medium = data.shipment.medium + doc.data().shipment.medium;\r\n                    data.shipment.large = data.shipment.large + doc.data().shipment.large;\r\n                    data.wastageM = data.wastageM + doc.data().wastageM;\r\n\r\n                });\r\n                resolve(data)\r\n            } else {\r\n                resolve(data)\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            reject(e)\r\n            // This will be a \"population is too big\" error.\r\n            console.error(e);\r\n        }\r\n    })\r\n}\r\n","import React from \"react\";\r\nimport { NormalInput, NormalButton } from '../../../common'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { supplierObj } from '../../../../entityModel/supplier';\r\nimport './supplierAdd.scss';\r\nimport { createSupplier, updateSupplier } from '../../../../api/supplier';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nexport class SupplierAdd extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            supplierObj,\r\n            isFormLoder: false,\r\n        }\r\n        this.validator = new SimpleReactValidator({\r\n            className: 'text-danger'\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { supplierObjForm } = this.props;\r\n        if (!!supplierObjForm && Object.keys(supplierObjForm).length > 0) {\r\n            this.setState({ supplierObj: supplierObjForm })\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        let { supplierObj } = this.state;\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            supplierObj: {\r\n                ...supplierObj,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleFormSubmit = () => {\r\n        let { supplierObj } = this.state;\r\n        let { toggle } = this.props;\r\n        supplierObj.code = Math.floor(Math.random() * 1000000);\r\n\r\n        if (this.validator.allValid()) {\r\n            this.setState({ isFormLoder: true });\r\n            let apiCall = supplierObj.hasOwnProperty('id') ? updateSupplier(Object.assign({}, supplierObj), supplierObj.id) : createSupplier(supplierObj)\r\n            apiCall.then((data) => {\r\n                this.setState({ isFormLoder: false });\r\n                toggle('success')\r\n            }).catch((error) => {\r\n                this.setState({ isFormLoder: false });\r\n                console.error(error)\r\n            });\r\n        } else {\r\n            this.validator.showMessages();\r\n            // rerender to show messages for the first time\r\n            // you can use the autoForceUpdate option to do this automatically`\r\n            this.forceUpdate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        let { isShow = false, toggle = '' } = this.props;\r\n        let { supplierObj,isFormLoder } = this.state;\r\n        return (\r\n\r\n\r\n            <Modal isOpen={isShow} toggle={toggle} className='edit-modal'>\r\n                {/* <ModalHeader  ></ModalHeader> */}\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Supplier</h5>\r\n                    <button type=\"button\" className=\"btn-close\" onClick={toggle} aria-label=\"Close\"></button>\r\n                </div>\r\n                <ModalBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Supplier Name</label>\r\n                                <NormalInput placeholder=\"Enter Supplier Name\" name=\"name\" onChange={this.handleInputChange} value={supplierObj.name} />\r\n                                {this.validator.message('Supplier Name', supplierObj.name, 'required')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <NormalButton label={supplierObj.hasOwnProperty('id') ? \"Update\" : \"Save\"} loader={isFormLoder} onClick={this.handleFormSubmit} />\r\n                    <NormalButton label=\"Cancel\" className=\"btn-danger\" disabled={isFormLoder} onClick={toggle} />\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { NormalInput, NormalButton } from '../../../common'\r\nimport './supplierList.scss';\r\nimport { history } from '../../../../helpers';\r\nimport { isAuthenticated } from '../../../../service/utilities';\r\nimport { SupplierAdd } from '../supplierAdd';\r\nimport { getAllSupplier } from '../../../../api/supplier'\r\n\r\nexport class SupplierList extends React.Component {\r\n\r\n    state = {\r\n        isOpenAdd: false,\r\n        isLoder: true,\r\n        supplierList: [],\r\n        isNodata: false,\r\n        searchName:''\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllSupplierList()\r\n    };\r\n\r\n\r\n    getAllSupplierList = () => {\r\n        this.setState({ isLoder: true });\r\n        getAllSupplier().then((supplierList) => {\r\n            console.log('supplierList---->', supplierList.length)\r\n            this.setState({ isLoder: false, supplierList, isNodata: supplierList.length === 0 });\r\n        }).catch((error) => {\r\n            this.setState({ isLoder: false });\r\n            console.error(error)\r\n        });\r\n    }\r\n\r\n    handleTogleEditModule = (data) => {\r\n        this.setState({ isOpenAdd: false, supplierObj: {} })\r\n        if (data === 'success') {\r\n            this.getAllSupplierList()\r\n        }\r\n\r\n    }\r\n\r\n    handleSearch=(event)=>{\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        let {supplierList}=this.state;\r\n        console.log(value)\r\n        if(!!value){\r\n            const result = !!value?[...supplierList].filter(({name}) => name.toLowerCase().includes(value.toLowerCase())):supplierList;\r\n            this.setState({supplierList:result, isNodata: result.length === 0,searchName:value });\r\n        }else{\r\n            this.setState({searchName:value });\r\n            this.getAllSupplierList()\r\n        }\r\n      \r\n    }\r\n\r\n    render() {\r\n        let { isOpenAdd, supplierList, supplierObj, isNodata,isLoder,searchName } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"row mb-4\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"input-group search-input mb-3\">\r\n                            <span className=\"input-group-text bi bi-search\"></span>\r\n                            <NormalInput  onChange={this.handleSearch} value={searchName}  />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 text-end\">\r\n                        <NormalButton label='Add New' className=\"btn-sm btn-primary\" onClick={() => this.setState({ isOpenAdd: true })} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {isLoder?\r\n                    <>\r\n                     {[1,2,3,4,5,6].map((data, i) =>\r\n                    <div className=\"col-md-4 mb-4 \">\r\n                        <div className=\"card product-card loder-card\">\r\n                            {/* <img src=\"...\" className=\"card-img-top\" alt=\"...\" /> */}\r\n                            <div className=\"card-body\">\r\n\r\n                                <h5 className=\"card-title skeletonLoader\">&nbsp;</h5>\r\n                                <p className=\"text-muted title-sub skeletonLoader\">&nbsp;</p>\r\n  \r\n\r\n                            </div>\r\n                            <div className=\"text-center card-footer\">\r\n                                <button className=\"btn btn-sm skeletonLoader\" type=\"button\">&nbsp;</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                     )}\r\n                     </>\r\n                    :\r\n                    <>\r\n                    {!isNodata && supplierList.map(({ name, code = '', cutting, stitching, ironing, packing, shipment, wastageM, id }, i) =>\r\n                        <div className=\"col-md-4 mb-4\" key={id}>\r\n                            <div className=\"card product-card\">\r\n                                {/* <img src=\"...\" className=\"card-img-top\" alt=\"...\" /> */}\r\n                                <div className=\"card-body\">\r\n\r\n                                    <h5 className=\"card-title\"><label>{name}</label> <i className=\"bi bi-pencil-fill text-primary edit-icon\" onClick={() => this.setState({ isOpenAdd: true, supplierObj: supplierList[i] })} /></h5>\r\n                                    <small className=\"text-muted\">{code}</small>\r\n                                    <span className=\"text-danger float-end\">wastage:{wastageM}M</span>\r\n                                    {/* <hr> */}\r\n                                    {/* <div className=\"\">\r\n                                    <h4 className=\"f5\">wastage: <span className=\"text-danger\">20M</span> </h4>\r\n\r\n                                </div> */}\r\n                                    <table className=\"table mt-2\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\"></th>\r\n                                                <th scope=\"col\">Small</th>\r\n                                                <th scope=\"col\">Medium</th>\r\n                                                <th scope=\"col\">Large</th>\r\n                                                <th scope=\"col\">Total</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td><strong>Cutting</strong></td>\r\n                                                <td>{cutting.small}</td>\r\n                                                <td>{cutting.medium}</td>\r\n                                                <td>{cutting.large}</td>\r\n                                                <td>{cutting.small + cutting.medium + cutting.large}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td><strong>Stitching</strong></td>\r\n                                                <td>{stitching.small}</td>\r\n                                                <td>{stitching.medium}</td>\r\n                                                <td>{stitching.large}</td>\r\n                                                <td>{stitching.small + stitching.medium + stitching.large}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td><strong>Ironing</strong></td>\r\n                                                <td>{ironing.small}</td>\r\n                                                <td>{ironing.medium}</td>\r\n                                                <td>{ironing.large}</td>\r\n                                                <td>{ironing.small + ironing.medium + ironing.large}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td><strong>Packing</strong></td>\r\n                                                <td>{packing.small}</td>\r\n                                                <td>{packing.medium}</td>\r\n                                                <td>{packing.large}</td>\r\n                                                <td>{packing.small + packing.medium + packing.large}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td><strong>Shipment</strong></td>\r\n                                                <td>{shipment.small}</td>\r\n                                                <td>{shipment.medium}</td>\r\n                                                <td>{shipment.large}</td>\r\n                                                <td>{shipment.small + shipment.medium + shipment.large}</td>\r\n                                            </tr>\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                                <div className=\"text-center card-footer\">\r\n                                    <button className=\"btn btn-primary btn-sm\" type=\"button\" onClick={() => history.push('/supplier/product/' + id)}>Manage Supplier</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}</>}\r\n                    {isNodata ? <h4 className=\"text-center  mt-5\">No data available</h4> : ''}\r\n                </div>\r\n                {isOpenAdd ?\r\n                    <SupplierAdd isShow={isOpenAdd} supplierObjForm={supplierObj} toggle={this.handleTogleEditModule} /> : ''}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import { STATUS } from '../service/constants'\r\n\r\nexport const userObj = {\r\n\r\n    fName:'',\r\n    lName:'',\r\n    empCode: '',\r\n    email:'',\r\n    phone:'',   \r\n    designation:'',\r\n    userType:'',\r\n    userId:'',\r\n    status: STATUS.ACTIVE,\r\n    createdBy: {\r\n        userId: '',\r\n        date: new Date().toISOString(),\r\n        name:''\r\n    },\r\n    updatedBy: {\r\n        userId: '',\r\n        date: '',\r\n        name:''\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport { NormalInput, NormalSelect,NormalButton } from '../../../common'\r\nimport { Button, Modal,  ModalBody, ModalFooter } from 'reactstrap';\r\nimport './userEdit.scss';\r\nimport { userObj } from '../../../../entityModel/user';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { USER_TYPE, STATUS } from '../../../../service/constants';\r\nimport { createAuthentication, updateUser } from '../../../../api'\r\nexport class UserEdit extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userObj,\r\n            isFormLoder: false,\r\n        }\r\n        this.validator = new SimpleReactValidator({\r\n            className: 'text-danger'\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let { userObjForm } = this.props;\r\n        console.log(!!userObjForm)\r\n        if ( Object.keys(userObjForm).length>0) {\r\n            this.setState({ userObj: userObjForm })\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        let { userObj } = this.state;\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        console.log(name)\r\n        this.setState({\r\n            userObj: {\r\n                ...userObj,\r\n                [name]: value\r\n            }\r\n        }, () => console.log(userObj))\r\n    }\r\n\r\n\r\n    handleFormSubmit = () => {\r\n        let { userObj } = this.state;\r\n        let { toggle } = this.props;\r\n       \r\n        if (this.validator.allValid()) {\r\n            this.setState({ isFormLoder: true });\r\n            console.log('dddd',userObj)\r\n            let apiCall = userObj.hasOwnProperty('id') ? updateUser(Object.assign({}, userObj), userObj.id) : createAuthentication(userObj)\r\n            apiCall.then((data) => {\r\n                this.setState({ isFormLoder: false });\r\n                toggle('success')\r\n            }).catch((error) => {\r\n                this.setState({ isFormLoder: false });\r\n                console.error(error)\r\n            });\r\n        } else {\r\n            this.validator.showMessages();\r\n            // rerender to show messages for the first time\r\n            // you can use the autoForceUpdate option to do this automatically`\r\n            this.forceUpdate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        let { isShow = false, toggle = '' } = this.props;\r\n        let { userObj,isFormLoder } = this.state;\r\n        let userTypeOpp = [{ label: 'Admin', value: USER_TYPE.ADMIN }, { label: 'User', value: USER_TYPE.USER }]\r\n        let statusTypeOpp = [{ label: 'Active', value: STATUS.ACTIVE }, { label: 'in-active', value: STATUS.IN_ACTIVE }]\r\n        return (\r\n\r\n\r\n            <Modal isOpen={isShow} toggle={toggle} className='edit-modal'>\r\n                {/* <ModalHeader  ></ModalHeader> */}\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">User Edit</h5>\r\n                    <button type=\"button\" className=\"btn-close\" onClick={toggle} aria-label=\"Close\"></button>\r\n                </div>\r\n                <ModalBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">First Name</label>\r\n                                <NormalInput placeholder=\"Enter First Name\" name=\"fName\" onChange={this.handleInputChange} value={userObj.fName} />\r\n                                {this.validator.message('First Name', userObj.fName, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Last Name</label>\r\n                                <NormalInput placeholder=\"Enter Last Name\" name=\"lName\" onChange={this.handleInputChange} value={userObj.lName} />\r\n                                {this.validator.message('Last Name', userObj.lName, 'required')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Email</label>\r\n                                <NormalInput placeholder=\"Enter Email\" name=\"email\" onChange={this.handleInputChange} value={userObj.email} />\r\n                                {this.validator.message('Email', userObj.email, 'required|email')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Phone</label>\r\n                                <NormalInput placeholder=\"Enter Phone\" name=\"phone\" onChange={this.handleInputChange} value={userObj.phone} />\r\n                                {this.validator.message('Phone', userObj.phone, 'required|phone')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Designation</label>\r\n                                <NormalInput placeholder=\"Enter Designation\" name=\"designation\" onChange={this.handleInputChange} value={userObj.designation} />\r\n                                {this.validator.message('Designation', userObj.designation, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Employee code</label>\r\n                                <NormalInput placeholder=\"Enter Employee code\" name=\"empCode\" onChange={this.handleInputChange} value={userObj.empCode} />\r\n                                {this.validator.message('Employee code', userObj.empCode, 'required')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">User Type</label>\r\n                                <NormalSelect options={userTypeOpp} name=\"userType\" onChange={this.handleInputChange} value={userObj.userType} placeholder=\"Seletct Type\" />\r\n                                {this.validator.message('User Type', userObj.userType, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Status</label>\r\n                                <NormalSelect name=\"status\" onChange={this.handleInputChange} value={userObj.status} options={statusTypeOpp} placeholder=\"Seletct Status\" />\r\n                                {this.validator.message('Status', userObj.status, 'required')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <hr />\r\n\r\n\r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Total Shipment</label>\r\n                                <NormalInput placeholder=\"Enter Total Shipment\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Completed Shipment</label>\r\n                                <NormalInput placeholder=\"Enter Completed Shipment\" />\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <NormalButton loader={isFormLoder} label={userObj.hasOwnProperty('id') ? \"Update\" : 'Save'} onClick={this.handleFormSubmit}/>\r\n                    <NormalButton label=\"Cancel\" className=\"btn-danger\" disabled={isFormLoder} onClick={toggle} />\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './userList.scss'\r\nimport { UserEdit } from '../userEdit'\r\nimport { Dialog, NormalDropdown } from \"../../../common\";\r\nimport { MODAL, STATUS } from \"../../../../service/constants\";\r\nimport { getAllUser, updateUser } from '../../../../api';\r\nexport class UserList extends React.Component {\r\n    state = {\r\n        userList: [],\r\n        alertModel: {\r\n            isShow: false,\r\n            type: '',\r\n            title: '',\r\n            id: '',\r\n            index: -1,\r\n            okBtn: '',\r\n            actionLoder: false\r\n        },\r\n        deleteUserIndex: -1,\r\n        isNodata: false,\r\n        isLoder:false\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.getAllUserList()\r\n    }\r\n\r\n\r\n    getAllUserList = () => {\r\n        this.setState({ isLoder: true });\r\n        getAllUser().then((userList) => {\r\n            this.setState({ isLoder: false, userList, isNodata: userList.length === 0 });\r\n        }).catch((error) => {\r\n            this.setState({ isLoder: false });\r\n            console.error(error)\r\n        });\r\n\r\n    }\r\n\r\n    //handleLogOut function call start\r\n    handleMoreOptions = (type, i) => {\r\n        console.log(i)\r\n        let { alertModel, userList } = this.state;\r\n        if (type.target.value !== 'Edit') {\r\n            alertModel.isShow = true;\r\n            alertModel.type = MODAL.TYPE.WARNING;\r\n            alertModel.okBtn = 'yes, Delete'\r\n            alertModel.title = 'Are you sure you want to Delete this account';\r\n            this.setState({ alertModel, deleteUserIndex: i });\r\n        } else {\r\n            this.props.openUserForm(userList[i])\r\n        }\r\n    }\r\n    //handleAlert \r\n    handleAlertModal = (value) => {\r\n        let { alertModel, userList, deleteUserIndex } = this.state;\r\n        if (value) {\r\n            let userObj = userList[deleteUserIndex];\r\n            userObj.status = STATUS.DELETED;\r\n            alertModel.actionLoder = true;\r\n            this.setState({ alertModel });\r\n            updateUser(Object.assign({}, userObj), userObj.id).then((data) => {\r\n                alertModel.isShow = false;\r\n                alertModel.actionLoder = false;\r\n                this.setState({ isFormLoder: false, alertModel, deleteUserIndex: -1 });\r\n                // toggle('success')\r\n            }).catch((error) => {\r\n                this.setState({ isFormLoder: false });\r\n                console.error(error)\r\n            });\r\n\r\n\r\n        } else {\r\n            alertModel.isShow = false;\r\n            this.setState({ isAlertModul: true })\r\n        }\r\n    }\r\n    render() {\r\n        let { userList, alertModel, isNodata,isLoder } = this.state;\r\n        let optionsList = [\r\n\r\n            {\r\n                icon: \"bi bi-pencil-fill\",\r\n                label: \"Edit\"\r\n            },\r\n            // {\r\n            //     icon: \"bi bi-pencil-fill\",\r\n            //     label: \"Mark as De-active\"\r\n            // },\r\n            {\r\n                icon: \"bi bi-trash-fill\",\r\n                label: \"Delete\"\r\n            }\r\n        ]\r\n        return (\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <table class=\"table table-borderless user-list table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Phone</th>\r\n                                <th scope=\"col\">Designation </th>\r\n                                <th scope=\"col\">User Type</th>\r\n                                <th scope=\"col\">Status</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        {isLoder ?\r\n                            <>\r\n                                {[1, 2, 3, 4, 5, 6].map((data, i) =>\r\n                                    <tbody className=\"loader-body\">\r\n                                        <tr>\r\n                                            <td ><label className=\"skeletonLoader\" >&nbsp;</label></td>\r\n                                            <td ><label className=\"skeletonLoader\" >&nbsp;</label></td>\r\n                                            <td ><label className=\"skeletonLoader\" >&nbsp;</label></td>\r\n                                            <td ><label className=\"skeletonLoader\" >&nbsp;</label></td>\r\n                                            <td ><label className=\"skeletonLoader\" >&nbsp;</label></td>\r\n                                            <td ><label className=\"skeletonLoader\" >&nbsp;</label></td>\r\n                                            <td ><label className=\"skeletonLoader\" >&nbsp;</label></td>\r\n                                            <td ><label className=\"skeletonLoader\" >&nbsp;</label></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                )}\r\n                            </>\r\n                            :\r\n                            <tbody>\r\n                                {!isNodata && userList.map(({ fName, lName, email, phone, userType, designation, status }, i) =>\r\n                                    <tr key={i}>\r\n                                        <th scope=\"row\">{i + 1}</th>\r\n                                        <td>{fName} {lName}</td>\r\n                                        <td>{email}</td>\r\n                                        <td>{phone}</td>\r\n                                        <td>{designation}</td>\r\n                                        <td>{userType}</td>\r\n                                        <td className=\"active status-text\">{status}</td>\r\n                                        <td>\r\n                                            <NormalDropdown\r\n                                                optionsList={optionsList}\r\n                                                direction=\"left\"\r\n                                                caret={false}\r\n                                                className=\"bg-transparent p-0 no-caret\"\r\n                                                labelIcon=\"bi bi-three-dots\"\r\n                                                onClick={(e) => this.handleMoreOptions(e, i)}\r\n                                            />\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                                {isNodata ?\r\n                                    <tr>\r\n                                        <td colSpan=\"8\" className=\"text-center\">No data available</td>\r\n                                    </tr> : ''}\r\n                            </tbody>\r\n                        }\r\n                    </table>\r\n\r\n                </div>\r\n\r\n                <Dialog show={alertModel.isShow} actionLoder={alertModel.actionLoder} sucessBtn={alertModel.okBtn} onToggle={this.handleAlertModal} type={alertModel.type} title={alertModel.title} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {ProductList} from '../../components/pages'\r\n\r\nexport class Product extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"page-titel mb-4 \">\r\n        Raman & co\r\n\r\n        </h4>\r\n      \r\n      <ProductList {...this.props}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {SupplierList} from '../../components/pages'\r\n\r\nexport class Supplier extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"page-titel mb-4 \">\r\n        Supplier\r\n        </h4>\r\n      \r\n      <SupplierList/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { UserList, UserEdit } from '../../components/pages';\r\nimport { NormalButton } from '../../components/common';\r\n\r\nexport class Users extends React.Component {\r\n    state = {\r\n        isUserEditModal: false,\r\n        userObjForm: {}\r\n\r\n    }\r\n\r\n\r\n    handleOpenForm = (data) => {\r\n        this.setState({ isUserEditModal: true, userObjForm: data })\r\n    }\r\n\r\n\r\n\r\nrender() {\r\n    let { isUserEditModal, userObjForm } = this.state;\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <h4 className=\"page-titel mb-4 \">Users</h4>\r\n                </div>\r\n                <div className=\"col-md-6 text-end\">\r\n                    <NormalButton label='Add New' className=\"btn-sm btn-primary\" onClick={() => this.setState({ isUserEditModal: true })} />\r\n                </div>\r\n            </div>\r\n\r\n            <UserList openUserForm={this.handleOpenForm} />\r\n            {isUserEditModal ?\r\n                <UserEdit isShow={isUserEditModal} userObjForm={userObjForm} toggle={() => this.setState({ isUserEditModal: false })} /> : \"\"}\r\n        </div>\r\n    );\r\n}\r\n}\r\n","\r\n/**\r\n*\r\n* Disclaimer: Source code mentioned below is(are) Intellectual Property of\r\n* Crayon Data Holdings Limited (including its subsidiaries and affiliates).\r\n* Crayon Data Holdings Limited reserves right to own and control it the way\r\n* it may deem fit. You must refrain from use, access, read, modify, add or\r\n* delete, sell or use in any other package or programme pertaining to such\r\n* source code without explicit prior written approval of\r\n* Crayon Data Holding Limited. Breach of the same shall attract penalty as\r\n* applicable.\r\n*\r\n*/\r\nimport React from \"react\";\r\nimport { NormalButton, NormalInput, NormalTextarea, NormalCheckbox, NormalSelect, NormalTable, NormalDropdown, ButtonGroup,AppBack } from '../../components/common'\r\n// import information from '../../assets/images/Information.svg'NormalSearch\r\n\r\nexport class Components extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            form: {\r\n                email: '',\r\n                Password: '',\r\n                checkbox: false,\r\n                textarea: '',\r\n                select: ''\r\n            },\r\n            tabelConfig: {\r\n                pagination: {\r\n                    start: 0,\r\n                    end: 4\r\n                },\r\n                theadList: [\r\n                    \"S. No\",\r\n                    \"User Name\",\r\n                    \"Requests\",\r\n                    \"Contact Number\",\r\n                    \"Location\",\r\n                    \"Requests Status\",\r\n                    \"\"\r\n                ],\r\n                tbodyList: [\r\n                    {\r\n                        name: \"Anvesh\",\r\n                        userImg: \"/images/user.png\",\r\n                        request: \"ISP, Newspaper\",\r\n                        phoneNumber: \"+625 5134 6584\",\r\n                        location: \"Chennai\",\r\n                        status: \"Processing\"\r\n                    },\r\n                    {\r\n                        name: \"Soundhar\",\r\n                        userImg: \"/images/user.png\",\r\n                        request: \"ISP, Newspaper\",\r\n                        phoneNumber: \"+625 5134 6584\",\r\n                        location: \"Chennai\",\r\n                        status: \"Processing\"\r\n                    },\r\n                    {\r\n                        name: \"Appu\",\r\n                        userImg: \"/images/user.png\",\r\n                        request: \"ISP, Newspaper\",\r\n                        phoneNumber: \"+625 5134 6584\",\r\n                        location: \"Chennai\",\r\n                        status: \"Processing\"\r\n                    },\r\n                    {\r\n                        name: \"Vijay\",\r\n                        userImg: \"/images/user.png\",\r\n                        request: \"ISP, Newspaper\",\r\n                        phoneNumber: \"+625 5134 6584\",\r\n                        location: \"Chennai\",\r\n                        status: \"Completed\"\r\n                    },\r\n                    {\r\n                        name: \"Mani\",\r\n                        userImg: \"/images/user.png\",\r\n                        request: \"ISP, Newspaper\",\r\n                        phoneNumber: \"+625 5134 6584\",\r\n                        location: \"Chennai\",\r\n                        status: \"Completed\"\r\n                    },\r\n                    {\r\n                        name: \"Miraha\",\r\n                        userImg: \"/images/user.png\",\r\n                        request: \"ISP, Newspaper\",\r\n                        phoneNumber: \"+625 5134 6584\",\r\n                        location: \"Chennai\",\r\n                        status: \"Completed\"\r\n                    },\r\n                    {\r\n                        name: \"Murali\",\r\n                        userImg: \"/images/user.png\",\r\n                        request: \"ISP, Newspaper\",\r\n                        phoneNumber: \"+625 5134 6584\",\r\n                        location: \"Chennai\",\r\n                        status: \"Processing\"\r\n                    }\r\n                ],\r\n            }\r\n\r\n        };\r\n    }\r\n    handleInputChange = (event) => {\r\n        console.log(event)\r\n        const target = event.target;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n        console.log(name, value)\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [name]: value\r\n            }\r\n        })\r\n        // this.setState({\r\n        //     [name]: value\r\n        // });\r\n    }\r\n    formSubmit = () => {\r\n        console.log(this.state.form)\r\n    }\r\n    render() {\r\n        let { form, tabelConfig } = this.state;\r\n        let optionsList = [\r\n            {\r\n                icon: \"icon-view\",\r\n                label: \"View Profile\"\r\n            },\r\n            {\r\n                icon: \"icon-edit\",\r\n                label: \"Edit\"\r\n            },\r\n            {\r\n                icon: \"icon-writing\",\r\n                label: \"Mark as Completed\"\r\n            },\r\n            {\r\n                icon: \"icon-delete\",\r\n                label: \"Delete\"\r\n            }\r\n        ]\r\n        return (\r\n            <>\r\n\r\n            <AppBack label=\"Back\"/>\r\n                <div className=\"card mb-4\" >\r\n                    <div className=\"card-header\">\r\n                        <div class=\"media\">\r\n                            <img className=\"mr-3\" src=\"/icon/user-2.svg\" alt=\"Generic placeholder image\" />\r\n                            <div className=\"media-body\">\r\n                                <h4>Form</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label >Email</label>\r\n                                    <NormalInput value={form.email} name='email' onChange={this.handleInputChange} />\r\n                                    <small>We'll never share your email with anyone else.</small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Password</label>\r\n                                    <NormalInput value={form.password} name='password' type={'password'} onChange={this.handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Textarea</label>\r\n                                    <NormalTextarea value={form.textarea} name='textarea' onChange={this.handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label >Textarea</label>\r\n                                    <NormalSelect value={form.select} name='select' onChange={this.handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <NormalCheckbox checked={form.checkbox} label='Check me out' name='checkbox' onChange={this.handleInputChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <NormalButton label='Submit' onClick={this.formSubmit} />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                {/* //NormalButton */}\r\n                <div class=\"card mb-4\" >\r\n                    <div class=\"card-header\">\r\n                        <h4>Button </h4>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n\r\n                            <div className=\"card-body\">\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"d-flex\">Button </label>\r\n                                    <NormalButton label='Primary' onClick={() => { }} />\r\n                                    <NormalButton label='Secondary' className=\"btn-secondary\" onClick={() => { }} />\r\n                                    <NormalButton label='Success' className=\"btn-success\" onClick={() => { }} />\r\n                                    <NormalButton label='Danger' className=\"btn-danger\" onClick={() => { }} />\r\n                                    <NormalButton label='Warning' className=\"btn-warning\" onClick={() => { }} />\r\n                                    <NormalButton label='Info' className=\"btn-info\" onClick={() => { }} />\r\n                                    <NormalButton label='Light' className=\"btn-light\" onClick={() => { }} />\r\n                                    <NormalButton label='Dark' className=\"btn-dark\" onClick={() => { }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"d-flex\">Outline buttons </label>\r\n                                    <NormalButton label='Primary' className=\"btn-outline-primary\" onClick={() => { }} />\r\n                                    <NormalButton label='Secondary' className=\" btn-outline-secondary\" onClick={() => { }} />\r\n                                    <NormalButton label='Success' className=\" btn-outline-success\" onClick={() => { }} />\r\n                                    <NormalButton label='Danger' className=\" btn-outline-danger\" onClick={() => { }} />\r\n                                    <NormalButton label='Warning' className=\" btn-outline-warning\" onClick={() => { }} />\r\n                                    <NormalButton label='Info' className=\" btn-outline-info\" onClick={() => { }} />\r\n                                    <NormalButton label='Light' className=\" btn-outline-light\" onClick={() => { }} />\r\n                                    <NormalButton label='Dark' className=\" btn-outline-dark\" onClick={() => { }} />\r\n                                </div>\r\n\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"d-flex\">Sizes Big</label>\r\n                                    <NormalButton label='Primary' className=\" btn-primary btn-lg\" onClick={() => { }} />\r\n                                    <NormalButton label='Secondary' className=\"btn-secondary btn-lg\" onClick={() => { }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"d-flex\">Sizes Small</label>\r\n                                    <NormalButton label='Primary' className=\" btn-primary btn-sm\" onClick={() => { }} />\r\n                                    <NormalButton label='Secondary' className=\"btn-secondary btn-sm\" onClick={() => { }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"d-flex\">Sizes Small</label>\r\n                                    <NormalButton label='Primary' className=\" btn-primary btn-lg btn-block\" onClick={() => { }} />\r\n                                    <NormalButton label='Secondary' className=\"btn btn-secondary btn-lg btn-block\" onClick={() => { }} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"d-flex\">Icon with button</label>\r\n                                    <NormalButton label='Primary' leftIcon=\"assignment_ind\" className=\" btn-primary \" onClick={() => { }} />\r\n                                    <NormalButton label='Secondary' rightIcon=\"assignment_ind\"  className=\"btn-outline-primary\" onClick={() => { }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"d-flex\">Button group</label>\r\n                                    <div className=\"filter-btn\" >\r\n                                        <ButtonGroup labels={['Left', 'Middle', 'Right']} className=\"btn-outline-primary btn-sm\" onClick={() => { }} />\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div class=\"card\" >\r\n                    <div class=\"card-header\">\r\n                        <h4>table</h4>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <NormalTable\r\n                                    className=\"table-borderless\"\r\n                                    pagination={true}\r\n                                    paginationLength={4}\r\n                                    theadList={tabelConfig.theadList}\r\n                                    tbodyList={tabelConfig.tbodyList}\r\n                                    tableChange={e => this.handleTable(e)}\r\n                                >\r\n                                    {tabelConfig.tbodyList.map(\r\n                                        (\r\n                                            { name, userImg, request, phoneNumber, location, status },\r\n                                            index\r\n                                        ) => (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>\r\n                                                    <img className=\"mr-2\" alt=\"\" src={userImg}></img>\r\n                                                    {name}\r\n                                                </td>\r\n                                                <td className=\"text-primary\">{request}</td>\r\n                                                <td>{phoneNumber}</td>\r\n                                                <td>{location}</td>\r\n                                                <td className={status === 'Completed' ? 'text-success' : 'text-warning'}>{status}</td>\r\n                                                <td>\r\n                                                    <NormalDropdown\r\n                                                        optionsList={optionsList}\r\n                                                        alinement=\"right\"\r\n                                                        caret={false}\r\n                                                        className=\"bg-transparent p-0 no-caret\"\r\n                                                        labelIcon=\"icon-show-more\"\r\n                                                        onClick={this.handleMoreOptions}\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    )}\r\n\r\n                                </NormalTable>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport {Route,HashRouter as Router,  } from \"react-router-dom\";\r\nimport { } from \"react-router-dom\";\r\nimport routers from \"./routes\";\r\n\r\nimport * as Layout from \"../layouts\";\r\nimport * as Pages from \"../pages\";\r\nimport {history} from \"../helpers\";\r\n\r\n// class NoMatch extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         Hello 404\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nclass Routes extends Component {\r\n\r\n// Authentication \"before\" filter\r\n  requireAuth=(nextState, replace)=>{\r\n    console.log(\"called\"); // => Is not triggered at all \r\n    // if (!isLoggedIn()) {\r\n    //   replace({\r\n    //     pathname: '/front'\r\n    //   })\r\n    // }\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <Router  history={history}>\r\n        {routers.map(\r\n        ({\r\n          component,\r\n          redirect,\r\n          path,\r\n          exact = false,\r\n          auth = true,\r\n          childrens = []\r\n        }) => {\r\n\r\n          if(childrens.length > 0){\r\n           \r\n            return (\r\n              <Route\r\n                path={path}\r\n                exact={exact}\r\n                key={path}\r\n                onEnter={this.requireAuth}\r\n                render={props => {\r\n                  if (redirect) {\r\n                    if (props.location.pathname === path) {\r\n                      props.history.push(redirect);\r\n                    }\r\n                  }\r\n\r\n                  const LayoutComponent = Layout[component];\r\n\r\n                  return (\r\n                    <LayoutComponent {...props}>\r\n                      {childrens.map(\r\n                        ({\r\n                          component: ChildrenComponent,\r\n                          path: childrenPath,\r\n                          exact = false,\r\n                          auth = true\r\n                        }) => {\r\n                         \r\n                          return (\r\n                            <Route\r\n                              path={path + childrenPath}\r\n                              exact={exact}\r\n                              key={path + childrenPath}\r\n                              onEnter={this.requireAuth}\r\n                              render={props => {\r\n                                let PageComponent = Pages[ChildrenComponent];\r\n\r\n                                return <PageComponent {...props} />;\r\n                              }}\r\n                            />\r\n                          );\r\n                        }\r\n                      )}\r\n                    </LayoutComponent>\r\n                  );\r\n                }}\r\n              />\r\n            );\r\n          }else{\r\n            return (\r\n              <Route\r\n              path={path}\r\n              exact={exact}\r\n              key={path}\r\n              onEnter={this.requireAuth}\r\n              render={props => {\r\n                if (redirect) {\r\n                  if (props.location.pathname === path) {\r\n                    props.history.push(redirect);\r\n                  }\r\n                }else{\r\n\r\n                  let PageComponent = Pages[component];\r\n  \r\n                  return <PageComponent {...props} />;\r\n                }\r\n  \r\n               \r\n              }}\r\n            />\r\n            )\r\n          }\r\n            \r\n               \r\n        })}\r\n\r\n{/* <Route component={NoMatch} /> */}\r\n      </Router>\r\n      \r\n        // <Switch >         \r\n        // </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","// Firebase deps\r\nimport { initializeApp } from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nvar db\r\nexport const initializeFirebase = () => {\r\n    // if (!firebase.apps.length) {\r\n    initializeApp({\r\n        apiKey: \"AIzaSyBhz5Xy1YRQmy_C36OUAn_mI0ao-88aP58\",\r\n        authDomain: \"avatar-garments-console.firebaseapp.com\",\r\n        projectId: \"avatar-garments-console\",\r\n        storageBucket: \"avatar-garments-console.appspot.com\",\r\n        messagingSenderId: \"229655194643\",\r\n        appId: \"1:229655194643:web:5b84a54f4c2ec77ca863e6\"\r\n    });\r\n    db = getFirestore();\r\n}\r\n\r\nexport default db;\r\n","\nimport './assets/scss/app.scss';\nimport Routes from \"./routes\";\nimport { initializeFirebase } from './firebase.config';\nimport 'react-notifications-component/dist/theme.css'\nimport ReactNotification from 'react-notifications-component'\ninitializeFirebase()\nfunction App() {\n\n  return (\n    <div>\n      <ReactNotification />\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}